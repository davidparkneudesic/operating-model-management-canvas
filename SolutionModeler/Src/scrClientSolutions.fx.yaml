"scrClientSolutions As screen.'autoLayout_SplitScreen_ver1.0'":
    Fill: |+
        =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
            RGBA(149, 149, 149, 1),
            RGBA(237, 237, 237, 1)
        )
        
    OnVisible: |-
        =If(dcProjectStart.SelectedDate > dcProjectEnd.SelectedDate,UpdateContext({varBadDate:true}),UpdateContext({varBadDate:false}))

    cntClientSolutionUpdate As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Regular
        Fill: |-
            =If(
                varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow,
                RGBA(
                    202,
                    202,
                    202,
                    1
                ),
                RGBA(
                    255,
                    255,
                    255,
                    1
                )
            )
        Height: =633
        Width: =1334
        X: =32
        Y: =108
        ZIndex: =1

        "glyClientSpecificOM As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            DisplayMode: =DisplayMode.Disabled
            Fill: =RGBA(255, 255, 255, 1)
            FocusedBorderColor: =
            Height: =78
            Items: =Filter(glyClientSolutionGallery.Selected.'Operating Models',Status = 'Status (Operating Models)'.Active)
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            ShowScrollbar: =false
            TemplateFill: =
            TemplatePadding: =0
            TemplateSize: =36
            Visible: |-
                =//If(varUpdateClientSolution,false,true)
                true
            Width: =402
            X: =908
            Y: =30
            ZIndex: =1

            Title14 As label:
                Color: =RGBA(0,0,0,1)
                Fill: =RGBA(0, 0, 0, 1)
                FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                Height: =35
                LineHeight: =.75
                OnSelect: =Select(Parent)
                Overflow: =Overflow.Scroll
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: =ThisItem.'Operating Model Name'
                VerticalAlign: =VerticalAlign.Top
                Width: =413
                Wrap: =false
                X: =14
                Y: =7
                ZIndex: =1

            NextArrow3 As icon.ChevronRight:
                AccessibleLabel: =Self.Tooltip
                Color: =RGBA(166, 166, 166, 1)
                Height: =50
                Icon: =Icon.ChevronRight
                OnSelect: =Select(Parent)
                PaddingBottom: =12
                PaddingLeft: =12
                PaddingRight: =12
                PaddingTop: =12
                Tooltip: ="View item details"
                Width: =50
                X: =Parent.TemplateWidth - Self.Width - 12
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =2

            Separator5 As rectangle:
                Height: =8
                OnSelect: =Select(Parent)
                Width: =Parent.TemplateWidth
                Y: =24
                ZIndex: =3

            Rectangle18 As rectangle:
                Height: =Parent.TemplateHeight - Separator5.Height
                OnSelect: =Select(Parent)
                Visible: =ThisItem.IsSelected
                Width: =4
                ZIndex: =4

        UpdateClientSolution_Button As button:
            Color: |-
                =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(
                    varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow,
                    ColorFade(
                        ColorValue("#00467f"),
                        -30%
                    ),
                    ColorValue("#00467f")
                )
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            OnSelect: |+
                =UpdateContext({varUpdateClientSolution:true});
                
            Size: =14
            Text: ="Modify Client Solution"
            Visible: =If(varUpdateClientSolution,false,true)
            Width: =209
            X: =1078
            Y: =402
            ZIndex: =7

        Cancel_Update_Form_Button As button:
            Color: |-
                =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
                    ColorFade(ColorValue("#00467f"), -30%),
                    ColorValue("#00467f")
                )
            Height: =44
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            OnSelect: |-
                =//ResetForm(ClientsSolutionsForm);NewForm(ClientsSolutionsForm);Set(varGalDefault,Blank());Set(varGalDefault,{})
                UpdateContext({varUpdateClientSolution:false});
            Text: ="Cancel"
            Visible: =If(varUpdateClientSolution,true,false)
            Width: =187
            X: =283
            Y: =577
            ZIndex: =8

        Delete_ClientSolution_Button As button:
            Color: |-
                =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
                    ColorFade(ColorValue("#00467f"), -30%),
                    ColorValue("#00467f")
                )
            Height: =44
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            OnSelect: |
                =//ResetForm(ClientsSolutionsForm);NewForm(ClientsSolutionsForm);Set(varGalDefault,Blank());Set(varGalDefault,{})
                UpdateContext({varDeleteClientSolutionWindow:true});
            Text: |-
                ="Delete
                "
            Visible: =If(varUpdateClientSolution,true,false)
            Width: =187
            X: =490
            Y: =577
            ZIndex: =10

        btnAzDOFunctions As button:
            Color: |-
                =If(
                    varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow,
                    RGBA(
                        202,
                        202,
                        202,
                        1
                    ),
                    RGBA(
                        255,
                        255,
                        255,
                        1
                    )
                )
            Fill: |-
                =If(
                    varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow,
                    ColorFade(
                        ColorValue("#00467f"),
                        -30%
                    ),
                    ColorValue("#00467f")
                )
            Height: =48
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            OnSelect: |+
                =Navigate(scrConnections, ScreenTransition.Cover);
                
            Size: =14
            Text: ="Manage Azure DevOps"
            Tooltip: ="Create Azure DevOps connections so that this data can be transmitted to a clients AzDO instance."
            Visible: =If(varUpdateClientSolution,false,true)
            Width: =204
            X: =1078
            Y: =248
            ZIndex: =16

        btnViewUserStories_1 As button:
            Color: |-
                =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow , 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
                    ColorFade(ColorValue("#00467f"), -30%),
                    ColorValue("#00467f")
                )
            Height: =44
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            OnSelect: |+
                =Navigate(scrOperatingModels, ScreenTransition.Cover);
                Set(ClientSolutionIdentifier,dcClientSolutionID.Text);
                ClearCollect(colClientSolutionName, Filter('Client Solutions', 'Solution Name' = glyClientSolutionGallery.Selected.'Solution Name'));
                
            Size: =14
            Text: ="Client Operating Models"
            Tooltip: ="Click this button to generate Operating Model(s) for this client solution."
            Visible: =If(varUpdateClientSolution,false,true)
            Width: =261
            X: =947
            Y: =127
            ZIndex: =17

        "'Related Operating Model Label_1' As label":
            Color: |-
                =ColorValue("#00467f")
            FontWeight: =FontWeight.Bold
            Height: =30
            Size: =12
            Text: ="Client Operating Models"
            Width: =347
            X: =904
            ZIndex: =19

        frmClientsSolutionsForm As form:
            AcceptsFocus: =true
            DataSource: ='Client Solutions'
            DefaultMode: =If(varUpdateClientSolution, FormMode.Edit,FormMode.View)
            Height: =314
            Item: =glyClientSolutionGallery.Selected
            Width: =900
            Y: =30
            ZIndex: =23

            "'Client/Prospect Name_DataCard1' As typedDataCard.textualEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_clientprospectname"
                Default: =ThisItem.'Client/Prospect Name'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Client Solutions'],DataSourceInfo.DisplayName,"neu_clientprospectname")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =74
                MaxLength: =DataSourceInfo([@'Client Solutions'], DataSourceInfo.MaxLength, "neu_clientprospectname")
                Required: =true
                Update: =dcClientProspectName.Text
                Width: =300
                X: =0
                Y: =0
                ZIndex: =1

                DataCardKey1 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    ZIndex: =1

                dcClientProspectName As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    MaxLength: =Parent.MaxLength
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =34
                    ZIndex: =2

                ErrorMessage2 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcClientProspectName.Y + dcClientProspectName.Height
                    ZIndex: =3

                StarVisible1 As label:
                    Align: =Align.Center
                    Height: =DataCardKey1.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey1.Y
                    ZIndex: =4

            "'Solution Name_DataCard1' As typedDataCard.textualEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_solutionname"
                Default: =ThisItem.'Solution Name'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Client Solutions'],DataSourceInfo.DisplayName,"neu_solutionname")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                MaxLength: =DataSourceInfo([@'Client Solutions'], DataSourceInfo.MaxLength, "neu_solutionname")
                Required: =true
                Update: =dcSolutionName.Text
                Width: =600
                WidthFit: =false
                X: =1
                Y: =0
                ZIndex: =1

                DataCardKey8 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    ZIndex: =1

                dcSolutionName As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    MaxLength: =Parent.MaxLength
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey8.Y + DataCardKey8.Height + 5
                    ZIndex: =2

                ErrorMessage8 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcSolutionName.Y + dcSolutionName.Height
                    ZIndex: =3

                StarVisible11 As label:
                    Align: =Align.Center
                    Height: =DataCardKey8.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey8.Y
                    ZIndex: =4

            "'Client Solution_DataCard3_2' As typedDataCard.textualViewCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_clientsolutionid"
                Default: =ThisItem.'Client Solution'
                DisplayMode: =DisplayMode.View
                DisplayName: =DataSourceInfo([@'Client Solutions'],DataSourceInfo.DisplayName,"neu_clientsolutionid")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =24
                Required: =false
                Visible: =false
                Width: =300
                X: =2
                Y: =0
                ZIndex: =1

                DataCardKey21_2 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcClientSolutionID As label:
                    AutoHeight: =true
                    DisplayMode: =Parent.DisplayMode
                    Height: =27
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Default
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey21_2.Y + DataCardKey21_2.Height + 5
                    ZIndex: =2

            "'Estimate URL_DataCard1' As typedDataCard.urlEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_estimateurl"
                Default: =ThisItem.'Estimate URL'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Client Solutions'],DataSourceInfo.DisplayName,"neu_estimateurl")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =40
                Required: =false
                Update: =dcEstimateURL.Text
                Width: =300
                WidthFit: =false
                X: =0
                Y: =1
                ZIndex: =1

                DataCardKey2 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcEstimateURL As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey2.Y + DataCardKey2.Height + 5
                    ZIndex: =2

                ErrorMessage3 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcEstimateURL.Y + dcEstimateURL.Height
                    ZIndex: =3

                StarVisible2 As label:
                    Align: =Align.Center
                    Height: =DataCardKey2.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey2.Y
                    ZIndex: =4

            "'Project Start Date_DataCard1' As typedDataCard.dateTimeEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_projectstartdate"
                Default: =ThisItem.'Project Start Date'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Client Solutions'],DataSourceInfo.DisplayName,"neu_projectstartdate")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =40
                Required: =false
                Update: =If(Not IsBlank(dcProjectStart.SelectedDate), dcProjectStart.SelectedDate, 0)
                Width: =300
                X: =1
                Y: =1
                ZIndex: =1

                DataCardKey7 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcProjectStart As datepicker:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultDate: =Parent.Default
                    DisplayMode: =Parent.DisplayMode
                    EndYear: =Year(Today())+100
                    IconBackground: |-
                        =ColorValue("#00467f")
                    IsEditable: =true
                    OnChange: |-
                        =If(dcProjectStart.SelectedDate > dcProjectEnd.SelectedDate, UpdateContext({varBadDate:true}),UpdateContext({varBadDate:false}))
                    PaddingBottom: =0
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    StartYear: =1899
                    Tooltip: =Parent.DisplayName
                    Width: =(Parent.Width - 60) / 2
                    X: =30
                    Y: =DataCardKey7.Y + DataCardKey7.Height + 5
                    ZIndex: =2

                HourValue2 As dropdown:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Text(Hour(Parent.Default),"00")
                    DisplayMode: =Parent.DisplayMode
                    Height: =dcProjectStart.Height
                    Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                    PaddingBottom: =5
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    PaddingRight: =5
                    PaddingTop: =5
                    Tooltip: =Parent.DisplayName
                    Visible: =false
                    Width: =dcProjectStart.Width / 2 - 10
                    X: =208
                    Y: =48
                    ZIndex: =3

                ErrorMessage7 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =HourValue2.Y + HourValue2.Height
                    ZIndex: =6

                StarVisible8 As label:
                    Align: =Align.Center
                    Height: =DataCardKey7.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey7.Y
                    ZIndex: =7

            "'Project End Date_DataCard1' As typedDataCard.dateTimeEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_projectenddate"
                Default: =ThisItem.'Project End Date'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Client Solutions'],DataSourceInfo.DisplayName,"neu_projectenddate")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =40
                Required: =false
                Update: =If(Not IsBlank(dcProjectEnd.SelectedDate), dcProjectEnd.SelectedDate, 0)
                Width: =300
                X: =2
                Y: =1
                ZIndex: =1

                DataCardKey4 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcProjectEnd As datepicker:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultDate: =Parent.Default
                    DisplayMode: =Parent.DisplayMode
                    EndYear: =Year(Today())+100
                    IconBackground: |-
                        =ColorValue("#00467f")
                    IsEditable: =true
                    OnChange: |-
                        =If(dcProjectStart.SelectedDate > dcProjectEnd.SelectedDate, UpdateContext({varBadDate:true}),UpdateContext({varBadDate:false}))
                    PaddingBottom: =0
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    StartYear: =1899
                    Tooltip: =Parent.DisplayName
                    Width: =(Parent.Width - 60) / 2
                    X: =30
                    Y: =DataCardKey4.Y + DataCardKey4.Height + 5
                    ZIndex: =2

                HourValue1 As dropdown:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Text(Hour(Parent.Default),"00")
                    DisplayMode: =Parent.DisplayMode
                    Height: =dcProjectEnd.Height
                    Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                    PaddingBottom: =5
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    PaddingRight: =5
                    PaddingTop: =5
                    Tooltip: =Parent.DisplayName
                    Visible: =false
                    Width: =dcProjectEnd.Width / 2 - 10
                    X: =dcProjectEnd.X + dcProjectEnd.Width + 10
                    Y: =dcProjectEnd.Y
                    ZIndex: =3

                ErrorMessage6 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =HourValue1.Y + HourValue1.Height
                    ZIndex: =6

                StarVisible4 As label:
                    Align: =Align.Center
                    Height: =DataCardKey4.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey4.Y
                    ZIndex: =7

            "'Implementation Model_DataCard1' As typedDataCard.comboBoxEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_ImplementationModelID"
                Default: =ThisItem.'Implementation Model'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Client Solutions'],DataSourceInfo.DisplayName,"neu_ImplementationModelID")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =false
                Update: =dcImplementationModel.Selected
                Width: =300
                X: =0
                Y: =2
                ZIndex: =1

                DataCardKey3 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcImplementationModel As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    ChevronBackground: |-
                        =ColorValue("#00467f")
                    DefaultSelectedItems: =Parent.Default
                    DisplayFields: =["neu_implementationmodelname"]
                    DisplayMode: =Parent.DisplayMode
                    Items: =Choices([@'Client Solutions'].neu_ImplementationModelID)
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["neu_implementationmodelname"]
                    SearchItems: =Search(Choices([@'Client Solutions'].neu_ImplementationModelID),dcImplementationModel.SearchText,"neu_implementationmodelname")
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey3.Y + DataCardKey3.Height + 5
                    ZIndex: =2

                ErrorMessage4 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcImplementationModel.Y + dcImplementationModel.Height
                    ZIndex: =3

                StarVisible3 As label:
                    Align: =Align.Center
                    Height: =DataCardKey3.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey3.Y
                    ZIndex: =4

            "'Status Reason_DataCard2' As typedDataCard.comboBoxOptionSetSingleEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="statuscode"
                Default: =ThisItem.'Status Reason'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Client Solutions'],DataSourceInfo.DisplayName,"statuscode")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =false
                Update: =dcCSStatusReason.Selected.Value
                Width: =300
                X: =1
                Y: =2
                ZIndex: =1

                DataCardKey9 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcCSStatusReason As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =[Parent.Default]
                    DisplayFields: =["Value"]
                    DisplayMode: =Parent.DisplayMode
                    IsSearchable: =false
                    Items: =Choices('Status Reason (Client Solutions)')
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["Value"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey9.Y + DataCardKey9.Height + 5
                    ZIndex: =2

                ErrorMessage11 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcCSStatusReason.Y + dcCSStatusReason.Height
                    ZIndex: =3

                StarVisible28 As label:
                    Align: =Align.Center
                    Height: =DataCardKey9.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey9.Y
                    ZIndex: =4

            "'Total Estimated Hours_DataCard1' As typedDataCard.numberEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_totalestimatedhours"
                Default: =ThisItem.'Total Estimated Hours'
                DisplayMode: =DisplayMode.Disabled
                DisplayName: =DataSourceInfo([@'Client Solutions'],DataSourceInfo.DisplayName,"neu_totalestimatedhours")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =false
                Update: =Value(DataCardValue2.Text)
                Width: =300
                X: =2
                Y: =2
                ZIndex: =1

                DataCardKey38 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                DataCardValue2 As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    Format: =TextFormat.Number
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey38.Y + DataCardKey38.Height + 5
                    ZIndex: =2

                ErrorMessage65 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardValue2.Y + DataCardValue2.Height
                    ZIndex: =3

                StarVisible59 As label:
                    Align: =Align.Center
                    Height: =DataCardKey38.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey38.Y
                    ZIndex: =4

        glyCSUserStories As dataTable.datatable:
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =1
            Color: |-
                =ColorValue("#00467f")
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            HeadingFill: |-
                = ColorValue("#00467f")
            Height: =258
            Items: |-
                =If(
                    varCSUserStoryCollectionActive,
                    Sort(
                        colCSUserSTories,
                        Capability.'Capability Name'
                    ),
                    Sort(
                        Filter(
                            'User Stories',
                            'Client Solution'.'Client Solution' = glyClientSolutionGallery.Selected.'Client Solution'
                        ),
                        Capability.'Capability Name',
                        SortOrder.Ascending
                    )
                )
            Visible: =If(varUpdateClientSolution,false,true)
            Width: =1029
            X: =17
            Y: =374
            ZIndex: =24

            "'Epic Level Item_Column1' As dataTableColumn.complexOptionSetColumn":
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Epic Level Item"
                FieldName: ="neu_epiclevelitem"
                FieldVariantName: ="complexOptionSetColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =7
                Text: =ThisItem.'Epic Level Item'
                Width: =100
                X: =0
                Y: =0
                ZIndex: =25

            Name_Column1 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Name"
                FieldName: ="neu_name"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                IsHyperlink: =true
                LayoutHeight: =Parent.Height
                OnSelect: |-
                    =Navigate(scrUserStories, ScreenTransition.Cover);
                    Set(varOpenCreateClientSolution,false);
                    Set(varUpdateClientSolution,false);
                Order: =4
                Text: =ThisItem.Name
                Width: =160
                X: =0
                Y: =0
                ZIndex: =26

            Description_Column1 As dataTableColumn.textualColumn:
                AutoWidth: =false
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Description"
                FieldName: ="neu_description"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =5
                Text: =ThisItem.Description
                Width: =400
                X: =184
                Y: =0
                ZIndex: =27

            "'Estimated Hours_Column1' As dataTableColumn.numberColumn":
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Estimated Hours"
                FieldName: ="neu_estimatedhours"
                FieldVariantName: ="numberColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =6
                Text: =ThisItem.'Estimated Hours'
                Width: =100
                X: =0
                Y: =0
                ZIndex: =28

            "'Client Solution_Column1' As dataTableColumn.complexTypeColumn":
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Client Solution"
                FieldName: ="neu_ClientSolutionID"
                FieldVariantName: ="complexTypeColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =8
                Text: =ThisItem.'Client Solution'.'Client Solution'
                Visible: =false
                Width: =100
                X: =493
                Y: =0
                ZIndex: =30

            "'Effort Percentage_Column1' As dataTableColumn.numberColumn":
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Effort Percentage"
                FieldName: ="neu_effortpercentage"
                FieldVariantName: ="numberColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =9
                Text: =ThisItem.'Effort Percentage'
                Visible: =false
                Width: =100
                X: =0
                Y: =0
                ZIndex: =31

            Process_Column1 As dataTableColumn.complexTypeColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Process"
                FieldName: ="neu_ProcessID"
                FieldVariantName: ="complexTypeColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =10
                Text: =ThisItem.Process.Process
                Visible: =false
                Width: =100
                X: =0
                Y: =0
                ZIndex: =32

            "'Process Group_Column1' As dataTableColumn.complexTypeColumn":
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Process Group"
                FieldName: ="neu_ProcessGroupID"
                FieldVariantName: ="complexTypeColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =11
                Text: =ThisItem.'Process Group'.'Process Group'
                Visible: =false
                Width: =100
                X: =0
                Y: =0
                ZIndex: =33

            "'Status Reason_Column2' As dataTableColumn.complexOptionSetColumn":
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Status Reason"
                FieldName: ="statuscode"
                FieldVariantName: ="complexOptionSetColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =12
                Text: =ThisItem.'Status Reason'
                Visible: =false
                Width: =100
                X: =0
                Y: =0
                ZIndex: =34

            "'User Story_Column1' As dataTableColumn.textualColumn":
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="User Story"
                FieldName: ="neu_userstoryid"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =13
                Text: =ThisItem.'User Story'
                Visible: =false
                Width: =100
                X: =0
                Y: =0
                ZIndex: =35

            "'Operating Model_Column1' As dataTableColumn.complexTypeColumn":
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Operating Model"
                FieldName: ="neu_OperatingModelID"
                FieldVariantName: ="complexTypeColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =14
                Text: =ThisItem.'Operating Model'.'Operating Model'
                Visible: =false
                Width: =100
                X: =0
                Y: =0
                ZIndex: =36

            neu_CapabilityID_Column3 As dataTableColumn.textualColumn:
                DisplayMode: =DisplayMode.Edit
                FieldDisplayName: ="Capability"
                FieldName: ="neu_CapabilityID"
                FieldVariantName: ="textualColumn"
                Height: =Parent.Height
                LayoutHeight: =Parent.Height
                Order: =3
                Text: =ThisItem.Capability.'Capability Name'
                Width: =100
                X: =0
                Y: =0
                ZIndex: =37

        Create_UserStory_Button As button:
            Fill: |-
                =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
                    ColorFade(ColorValue("#00467f"), -30%),
                    ColorValue("#00467f")
                )
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            OnSelect: |
                =//If(IsBlank(glyCSUserStories.Selected),Select(glyCSUserStories,1));
                Navigate(scrUserStories, ScreenTransition.Cover);
                Set(varOpenUserStoryCreate,true);
            Text: ="New User Story"
            Tooltip: ="Click this button to create new User Stories for this Client Solution."
            Visible: =If(varUpdateClientSolution,false,true)
            Width: =212
            X: =766
            Y: =323
            ZIndex: =25

        lblClientSolutionUserStories As label:
            FontWeight: =FontWeight.Bold
            Height: =38
            Text: ="Client Solution User Stories"
            Visible: =If(varUpdateClientSolution,false,true)
            Width: =384
            X: =17
            Y: =325
            ZIndex: =26

        lblBadDatesOnUpdate As label:
            Color: =RGBA(255, 0, 0, 1)
            Height: =37
            Text: ="Please verify project dates!"
            Visible: =If(varBadDate, true,false)
            Width: =333
            X: =918
            Y: =208
            ZIndex: =27

        Icon5 As icon.Reload:
            Height: =30
            Icon: =Icon.Reload
            OnSelect: |
                =ClearCollect(colCSUserSTories,Filter('User Stories', 'Client Solution'.'Client Solution' = glyClientSolutionGallery.Selected.'Client Solution'));
                UpdateContext({varCSUserStoryCollectionActive:true});
                UpdateContext({varEpicHoursCalcd:false})
            Rotation: =90
            Visible: =If(varUpdateClientSolution,false,true)
            Width: =37
            X: =1012
            Y: =328
            ZIndex: =28

    "'Client Solutions Page Label' As label":
        Align: =Align.Center
        Color: |-
            =If(
                varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow,
                RGBA(
                    202,
                    202,
                    202,
                    1
                ),
                RGBA(
                    255,
                    255,
                    255,
                    1
                )
            )
        Fill: |-
            =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
                ColorFade(ColorValue("#00467f"), -30%),
                ColorValue("#00467f")
            )
        Font: =Font.'Lato Light'
        FontWeight: =FontWeight.Semibold
        Height: =76
        Size: =26
        Text: ="Client Solution Details"
        Width: =1366
        ZIndex: =2

    "'Back Button_to HomePage' As icon.ChevronLeft":
        Color: |-
            =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
            RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
        Height: =45
        Icon: =Icon.ChevronLeft
        OnSelect: |-
            =Navigate(scrClientSolutionSelection, ScreenTransition.UnCoverRight);
            Set(varOpenCreateClientSolution,false);
            Set(varUpdateClientSolution,false);
            UpdateContext({varDeleteClientSolutionWindow:false});
            UpdateContext({varUpdatedCSWindow:false});
            UpdateContext({varClientSolutionCreated:false});
            Set(ClientSolutionIdentifier,"");
            UpdateContext({varEpicHoursCalcd:false})
        Visible: =If(varUpdateClientSolution,false,true)
        Width: =45
        X: =18
        Y: =15
        ZIndex: =3

    Run_EpicBalancerFunction_Button As button:
        Fill: |-
            =If(
                varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow,
                ColorFade(
                    ColorValue("#00467f"),
                    -30%
                ),
                ColorValue("#00467f")
            )
        HoverFill: |-
            =ColorFade(ColorValue("#00467f"), -30%)
        OnSelect: |-
            =RunMultiplier.Run(dcClientSolutionID);
            UpdateContext({varEpicHoursCalcd:true})
        Text: ="Update Epic Hours"
        Tooltip: ="This fire a workflow that will update the Epic Level Items to sync up with the total effort from the Non Epic Level Items."
        Visible: =If(varUpdateClientSolution,false,true)
        Width: =209
        X: =1104
        Y: =432
        ZIndex: =4

    "'Client Solution Create Container' As groupContainer.manualLayoutContainer":
        Fill: =RGBA(255, 255, 255, 1)
        Height: =529
        Visible: =If(varOpenCreateClientSolution,true,false)
        Width: =1188
        X: =89
        Y: =37
        ZIndex: =5

        btnReset As button:
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            OnSelect: |
                =//ResetForm(ClientsSolutionsForm);Set(varGalDefault,Blank())
                Set(varOpenCreateClientSolution,false);
                UpdateContext({varClientSolutionCreated:false});
            Text: ="Cancel"
            Visible: |-
                =//If(ClientsSolutionsForm.Mode = FormMode.New, true, false)
                true
            Width: =177
            X: =403
            Y: =467
            ZIndex: =1

        BtnSubmit As button:
            DisplayMode: |-
                =If(
                    IsBlank('New Solution Name Input') || IsBlank('Client/Prospect Name Input') || varBadDate,
                    DisplayMode.Disabled,
                    DisplayMode.Edit
                )
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            OnSelect: |-
                =If(IsBlank('Estimate URL Input'.Text),
                    Patch(
                        'Client Solutions',
                        Defaults('Client Solutions'),
                        {
                            'Solution Name':'New Solution Name Input'.Text,
                            'Client/Prospect Name':'Client/Prospect Name Input'.Text,
                            'Status Reason':'Status Reason CS Dropdown'.Selected.Value,
                            'Implementation Model':'Implementation Model CS Dropdown'.Selected,
                            'Project Start Date':'Project Start Date DatePicker'.SelectedDate,
                            'Project End Date':'Project End Date DatePicker'.SelectedDate
                        }
                    ),
                    Patch(
                        'Client Solutions',
                        Defaults('Client Solutions'),
                        {
                            'Solution Name':'New Solution Name Input'.Text,
                            'Client/Prospect Name':'Client/Prospect Name Input'.Text,
                            'Status Reason':'Status Reason CS Dropdown'.Selected.Value,
                            //'Estimate URL':"<a href='" & 'Estimate URL Input'.Text & "'>URL</a>",
                            'Estimate URL':'Estimate URL Input'.Text,
                            'Implementation Model':'Implementation Model CS Dropdown'.Selected,
                            'Project Start Date':'Project Start Date DatePicker'.SelectedDate,
                            'Project End Date':'Project End Date DatePicker'.SelectedDate
                        }
                    )
                );
                
                
                // Create a temporary collection to capture the newly created data
                ClearCollect(colCreatedClientSolutionTemp, Filter('Client Solutions', 
                                            'Solution Name' = 'New Solution Name Input'.Text && 
                                            'Client/Prospect Name' = 'Client/Prospect Name Input'.Text && 
                                            'Status Reason' = 'Status Reason CS Dropdown'.Selected.Value &&
                                            'Implementation Model'.'Implementation Model Name' = 'Implementation Model CS Dropdown'.Selected.'Implementation Model Name' &&
                                            'Project Start Date' = 'Project Start Date DatePicker'.SelectedDate &&
                                            'Project End Date' = 'Project End Date DatePicker'.SelectedDate
                    )
                );
                UpdateContext({varClientSolutionCreated:true});
                Navigate(scrClientSolutionSelection);
                Set(varOpenCreateClientSolution,false);
                Reset('New Solution Name Input'); Reset('Client/Prospect Name Input'); Reset('Estimate URL Input'); Reset('Project Start Date DatePicker'); Reset('Project End Date DatePicker');Set(varOpenCreateClientSolution,false);Set(varUpdateClientSolution,false);Navigate(scrClientSolutionSelection)
            Text: ="Submit"
            Width: =177
            X: =182
            Y: =467
            ZIndex: =2

        "'New Solution Name Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="* New Solution Name"
            Width: =239
            X: =80
            Y: =125
            ZIndex: =3

        "'New Solution Name Input' As text":
            Default: =""
            OnSelect: |-
                =UpdateContext({varClientSolutionCreated:false})
            Width: =296
            X: =80
            Y: =165
            ZIndex: =4

        "'Client/Prospect Name Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="* Client / Prospect Name"
            Width: =239
            X: =414
            Y: =125
            ZIndex: =5

        "'Client/Prospect Name Input' As text":
            Default: =""
            OnSelect: |-
                =UpdateContext({varClientSolutionCreated:false})
            X: =414
            Y: =165
            ZIndex: =6

        "'Status Reason CS Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Status Reason"
            Width: =239
            X: =773
            Y: =125
            ZIndex: =7

        "'Status Reason CS Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Default: ="Proposal"
            Items: =Choices('Status Reason (Client Solutions)')
            Width: =293
            X: =773
            Y: =165
            ZIndex: =8

        "'Estimate URL Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Estimate URL"
            Width: =239
            X: =80
            Y: =233
            ZIndex: =11

        "'Estimate URL Input' As text":
            Default: =""
            Width: =651
            X: =80
            Y: =273
            ZIndex: =12

        "'Implementation Model CS Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Implementation Model"
            Width: =239
            X: =768
            Y: =233
            ZIndex: =13

        "'Implementation Model CS Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Default: ="Proposal"
            Items: =Filter('Implementation Models','Status Reason' = 'Status Reason (Implementation Models)'.Active)
            Width: =293
            X: =768
            Y: =273
            ZIndex: =14

        "'Project Start Date Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Project Start Date"
            Width: =239
            X: =80
            Y: =340
            ZIndex: =15

        "'Project End Date Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Project End Date"
            Width: =239
            X: =406
            Y: =340
            ZIndex: =16

        "'Project Start Date DatePicker' As datepicker":
            Color: =RGBA(0, 70, 127, 1)
            IconBackground: |-
                =ColorValue("#00467f")
            OnChange: |-
                =If('Project Start Date DatePicker'.SelectedDate < Today() ||'Project End Date DatePicker'.SelectedDate < 'Project Start Date DatePicker'.SelectedDate ,UpdateContext({varBadDate:true}),UpdateContext({varBadDate:false}))
            Width: =280
            X: =80
            Y: =380
            ZIndex: =17

        "'Project End Date DatePicker' As datepicker":
            DefaultDate: =
            IconBackground: |-
                =ColorValue("#00467f")
            OnChange: |-
                =If('Project End Date DatePicker'.SelectedDate < 'Project Start Date DatePicker'.SelectedDate,UpdateContext({varBadDate:true}),UpdateContext({varBadDate:false}))
            Width: =280
            X: =403
            Y: =380
            ZIndex: =18

        "'Client Solution Created Message' As label":
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Text: ="Client Solution was successfully created!"
            Visible: =If(varClientSolutionCreated,true,false)
            Width: =347
            X: =421
            Y: =555
            ZIndex: =19

        "'Create New Client Solution Title' As label":
            Align: =Align.Center
            Color: |-
                =ColorValue("#FFFFFF")
            Fill: |-
                =ColorValue("#00467f")
            Font: =Font.Lato
            FontWeight: =FontWeight.Bold
            Height: =70
            Size: =25
            Text: ="Create New Client Solution"
            Width: ='Client Solution Create Container'.Width
            ZIndex: =20

        "'Exit Create CS Icon' As icon.Cancel":
            Color: =RGBA(255, 255, 255, 1)
            Height: =60
            Icon: =Icon.Cancel
            OnSelect: |-
                =Set(varOpenCreateClientSolution,false);
                UpdateContext({varClientSolutionCreated:false});
                Navigate(scrClientSolutionSelection);
                //Reset('New Solution Name Input'); Reset('Client/Prospect Name Input'); Reset('Estimate URL Input'); Reset('Project Start Date DatePicker'); Reset('Project End Date DatePicker');
            Width: =60
            X: |+
                ='Client Solution Create Container'.Width - 65
                
            Y: =5
            ZIndex: =21

        Label1 As label:
            Color: =RGBA(255, 0, 0, 1)
            Height: =34
            Text: ="Please verify your dates"
            Visible: =If(varBadDate,true,false)
            Width: =224
            X: =159
            Y: =420
            ZIndex: =23

    "'Delete Client Solution Confirmation Container' As groupContainer.manualLayoutContainer":
        DropShadow: =DropShadow.Semibold
        Fill: =RGBA(255, 255, 255, 1)
        Height: =266
        Visible: =If(varDeleteClientSolutionWindow,true,false)
        Width: =589
        X: =389
        Y: =251
        ZIndex: =6

        "'Delete Confirmation Button' As button":
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: |-
                =Remove('Client Solutions', LookUp('Client Solutions', 'Client Solution' = glyClientSolutionGallery.Selected.'Client Solution'));
                UpdateContext({varMessageCSDeleted:true})
            Text: ="Delete"
            Visible: =If(varMessageCSDeleted,false,true)
            X: =40
            Y: =204
            ZIndex: =2

        "'Delete Confirmation Message' As label":
            Align: =Align.Center
            Height: =141
            Text: |-
                ="Please click ""Delete"" Button to continue.    
                
                NOTE:  This will delete the Client Solution and any associate Operating Model(s) that have been defined.   This is irreversible."
            Visible: =If(varMessageCSDeleted,false,true)
            Width: =482
            X: =54
            Y: =42
            ZIndex: =3

        "'Delete Confirmation Button_1' As button":
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: |-
                =UpdateContext({varDeleteClientSolutionWindow:false})
            Text: ="Cancel"
            Visible: =If(varMessageCSDeleted,false,true)
            X: =413
            Y: =204
            ZIndex: =4

        "'CS Deleted Message' As label":
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Text: ="The Client Solution was successfully deleted!"
            Visible: =If(varMessageCSDeleted,true,false)
            Width: =482
            X: =54
            Y: =113
            ZIndex: =5

        "'Exit Container After Delete Button' As icon.Cancel":
            Height: =56
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({varDeleteClientSolutionWindow:false});
                UpdateContext({varMessageCSDeleted:false});
                Set(varUpdateClientSolution,false);
            Visible: =If(varMessageCSDeleted,true,false)
            Width: =57
            X: =516
            Y: =12
            ZIndex: =6

        btnOK As button:
            Fill: |-
                = ColorValue("#00467f")
            OnSelect: |-
                =Navigate(scrClientSolutionSelection);
                UpdateContext({varDeleteClientSolutionWindow:false});
                UpdateContext({varMessageCSDeleted:false});
                UpdateContext({varUpdateClientSolution:false})
            Text: ="OK"
            Visible: =If(varMessageCSDeleted,true,false)
            X: =200
            Y: =183
            ZIndex: =7

    Update_Button As button:
        Color: |-
            =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
            RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
        Fill: |-
            =If(varOpenCreateClientSolution || varUpdatedCSWindow || varDeleteClientSolutionWindow, 
                ColorFade(ColorValue("#00467f"), -30%),
                ColorValue("#00467f")
            )
        Height: =44
        HoverFill: |-
            =ColorFade(ColorValue("#00467f"), -30%)
        OnSelect: |-
            =  If (dcCSStatusReason.Selected.Value = 'Status Reason (Client Solutions)'.Inactive,
            
              Patch(
                    'Client Solutions',
                    glyClientSolutionGallery.Selected,
                    {
                        'Solution Name':dcSolutionName.Text,
                        'Client/Prospect Name':dcClientProspectName.Text,
                         Status:'Status (Client Solutions)'.Inactive,
                        'Estimate URL':dcEstimateURL.Text,
                        'Implementation Model':dcImplementationModel.Selected,
                        'Project Start Date':dcProjectStart.SelectedDate,
                        'Project End Date':dcProjectEnd.SelectedDate
                    }
                );  
              ,
              Patch(
                    'Client Solutions',
                    glyClientSolutionGallery.Selected,
                    {
                        'Solution Name':dcSolutionName.Text,
                        'Client/Prospect Name':dcClientProspectName.Text,
                        'Status Reason':dcCSStatusReason.Selected.Value,
                        'Estimate URL':dcEstimateURL.Text,
                        'Implementation Model':dcImplementationModel.Selected,
                        'Project Start Date':dcProjectStart.SelectedDate,
                        'Project End Date':dcProjectEnd.SelectedDate
                    }
                )
              );
            UpdateContext({varUpdatedCSWindow:false});
            UpdateContext({varUpdateClientSolution:false});
            Navigate(scrClientSolutionSelection)
        Text: ="Save"
        Visible: =If(varUpdateClientSolution,true,false)
        Width: =187
        X: =115
        Y: =685
        ZIndex: =8

    lblEpicHoursUpdate As label:
        Align: =Align.Center
        Color: =RGBA(255, 0, 0, 1)
        Height: =112
        Text: ="Epic Hours are being updated.  After 10 seconds, click on the refresh icon to see the newly calculated hours.  Total Estimated Hours will refresh if you close the record and return back"
        Visible: =If(varEpicHoursCalcd,true,false)
        Width: =353
        X: =960
        Y: =308
        ZIndex: =9

    lblCSInactiveWarning As label:
        Align: =Align.Center
        Color: =RGBA(255, 0, 0, 1)
        Height: =80
        Text: ="Setting a Client Solution to Inactive status will result in the irreversible deletion of it, the associated User Stories and Operating Models."
        Visible: =If(dcCSStatusReason.Selected.Value = 'Status Reason (Client Solutions)'.Inactive, true, false)
        Width: =496
        X: =236
        Y: =437
        ZIndex: =11

