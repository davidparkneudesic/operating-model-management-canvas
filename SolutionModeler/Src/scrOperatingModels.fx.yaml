scrOperatingModels As screen:
    Fill: |-
        =If(
            varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail || varEditOM || varEditCap || varEditL3Cap || varEditSubCap,
            RGBA(
                149,
                149,
                149,
                1
            ),
            RGBA(
                237,
                237,
                237,
                1
            )
        )
    OnVisible: =

    TextInput3 As text:
        Default: =First(colCreateWindowPGFilter).'Process Group Name'
        Visible: =false
        X: =155
        Y: =638
        ZIndex: =1

    OperatingModel_Gallery_Window As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Regular
        Fill: |-
            =If(varOpenOperatingModelCreate || varEditOM || varOpenCapabilityCreate ||varEditCap || varEditL3Cap || varEditSubCap || varOpenProcessGroupCreate || varOpenProcessGroupEdit || varOpenProcessCreate ||  varEditProcess, 
            RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
        Height: =661
        Width: =1253
        X: =56
        Y: =86
        ZIndex: =2

        "glyOperatingModels As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Fill: |-
                =If(varOpenOperatingModelCreate || varEditOM || varOpenCapabilityCreate ||varEditCap || varEditL3Cap || varEditSubCap || varOpenProcessGroupCreate || varOpenProcessGroupEdit || varOpenProcessCreate ||  varEditProcess, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Height: =409
            Items: |-
                =If(
                    IsBlank(ClientSolutionIdentifier),
                    //Standard Operating Models
                    If(
                        chkDraftModels.Value = false || IsBlank(chkDraftModels),
                        SortByColumns(
                            Filter(
                                'Operating Models',
                                IsBlank('Client Solution Identifier'.'Client Solution') && 'Status Reason' = 'Status Reason (Operating Models)'.Active
                            ),
                            "neu_operatingmodelname",
                            SortOrder.Ascending
                        ),
                        SortByColumns(
                            Filter(
                                'Operating Models',
                                IsBlank('Client Solution Identifier'.'Client Solution') && 'Status Reason' = 'Status Reason (Operating Models)'.Draft
                            ),
                            "neu_operatingmodelname",
                            SortOrder.Ascending
                        )
                    ),
                    SortByColumns(
                        Filter(
                            'Operating Models',
                            'Client Solution Identifier'.'Client Solution' = GUID(txtClientID.Text) && Status = 'Status (Operating Models)'.Active
                        ),
                        "neu_operatingmodelname",
                        SortOrder.Ascending
                    )
                )
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            OnSelect: |-
                =Clear(colSubCapabilities);
                Clear(colCapabiilitiesL2);
                Clear(colProcessGroups);
                ClearCollect(colOperatingModelFilter, Filter('Operating Models','Operating Model' = glyOperatingModels.Selected.'Operating Model'));
                UpdateContext({varExpandCapGal:false})
            TemplateFill: |-
                =If(ThisItem.'Operating Model Name' = glyOperatingModels.Selected.'Operating Model Name' && 
                        !(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail), 
                     RGBA(204, 208, 225, 1),
                    If (ThisItem.'Operating Model Name' = glyOperatingModels.Selected.'Operating Model Name' && 
                            (varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail),
                            RGBA(153, 160, 196, 1),
                            RGBA(0,0,0,0)
                    )
                )
                
                //RGBA(204, 208, 225, 1)
            TemplatePadding: =0
            TemplateSize: =42
            Width: =280
            X: =26
            Y: =56
            ZIndex: =1

            Title3 As label:
                FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                Height: =42
                LineHeight: =2
                OnSelect: =Select(Parent)
                PaddingBottom: =10
                PaddingLeft: =10
                PaddingRight: =10
                PaddingTop: =10
                Size: =10
                Text: =ThisItem.'Operating Model Name'
                Width: =260
                X: =12
                ZIndex: =1

            Rectangle2 As rectangle:
                Height: =Parent.TemplateHeight
                OnSelect: =Select(Parent)
                Visible: =ThisItem.IsSelected
                Width: =4
                ZIndex: =4

            IcoEditOM As icon.Edit:
                Color: =RGBA(166, 166, 166, 1)
                Height: =29
                Icon: =Icon.Edit
                OnSelect: |-
                    =Select(Parent);
                    UpdateContext({varEditOM:true})
                Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
                Width: =35
                X: =230
                Y: =7
                ZIndex: =5

        "glyCapabilityLevel1 As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Fill: |-
                =If(varOpenOperatingModelCreate || varEditOM || varOpenCapabilityCreate ||varEditCap || varEditL3Cap || varEditSubCap || varOpenProcessGroupCreate || varOpenProcessGroupEdit || varOpenProcessCreate ||  varEditProcess, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Height: =137
            Items: |-
                =Sort(
                    Sort(
                        Filter(
                            Capabilities,
                            'Operating Model'.'Operating Model' = glyOperatingModels.Selected.'Operating Model' && IsBlank('Parent Capability') && Status = 'Status (Capabilities)'.Active
                        ),
                        Sequence
                    ),
                    'Capability Name'
                )
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            OnSelect: |
                =ClearCollect(
                    colSubCapabilities,
                    Filter(
                        Capabilities,
                        'Parent Capability'.Capability = glyCapabilityLevel1.Selected.Capability && Status = 'Status (Capabilities)'.Active
                    )
                );
                ClearCollect(
                    colProcessGroups,
                    Filter(
                        'Process Groups',
                        Capability.Capability = glyCapabilityLevel1.Selected.Capability && Status = 'Status (Process Groups)'.Active
                    )
                );
                
                ClearCollect(
                    colCreateWindowCapacityFilter,
                    Filter(
                        Capabilities,
                        Capability = glyCapabilityLevel1.Selected.Capability && Status = 'Status (Capabilities)'.Active
                    )
                );
                Clear(colCapabiilitiesL2);
                UpdateContext({varCapLevel:"(Level 1)"})
            ShowNavigation: =true
            TemplateFill: |-
                =If(ThisItem.'Capability Name' = glyCapabilityLevel1.Selected.'Capability Name' && 
                        !(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail), 
                    RGBA(204, 208, 225, 1),
                    If (ThisItem.'Capability Name' = glyCapabilityLevel1.Selected.'Capability Name' && 
                            (varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail),
                            RGBA(153, 160, 196, 1),
                            RGBA(0,0,0,0)
                    )
                )
            TemplatePadding: =0
            TemplateSize: =42
            Width: =280
            X: =341
            Y: =56
            ZIndex: =2

            "'Head Capability Label' As label":
                FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                Height: =42
                OnSelect: |-
                    =Select(Parent);
                    UpdateContext({varExpandCapGal:false})
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: =ThisItem.'Capability Name'
                Width: =260
                X: =12
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =1

            Rectangle2_1 As rectangle:
                Height: =Parent.TemplateHeight
                OnSelect: =Select(Parent)
                Visible: =ThisItem.IsSelected
                Width: =4
                ZIndex: =4

            icoEditCap As icon.Edit:
                Color: =RGBA(166, 166, 166, 1)
                Height: =29
                Icon: =Icon.Edit
                OnSelect: |-
                    =Select(Parent);
                    UpdateContext({varEditCap:true});
                    UpdateContext({varEditSubCap:false})
                Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
                Width: =35
                X: =237
                Y: =6
                ZIndex: =6

        "glyProcessGroup As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Fill: |-
                =If(varOpenOperatingModelCreate || varEditOM || varOpenCapabilityCreate ||varEditCap || varEditL3Cap || varEditSubCap || varOpenProcessGroupCreate || varOpenProcessGroupEdit || varOpenProcessCreate ||  varEditProcess, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Height: =504
            Items: |-
                =Sort(
                    Sort(
                        colProcessGroups,
                        'Process Group Name'
                    ),
                    Sequence
                )
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            OnSelect: |-
                =ClearCollect(colCreateWindowPGFilter, Filter('Process Groups', 'Process Group' = glyProcessGroup.Selected.'Process Group'));
                ClearCollect(colFilteredProcesses, Filter(Processes, 'Process Group'.'Process Group' = glyProcessGroup.Selected.'Process Group'))
            TemplateFill: |-
                =If(ThisItem.'Process Group Name' = glyProcessGroup.Selected.'Process Group Name' && 
                        !(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail), 
                     RGBA(204, 208, 225, 1),
                    If (ThisItem.'Process Group Name' = glyProcessGroup.Selected.'Process Group Name' && 
                            (varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail),
                            RGBA(153, 160, 196, 1),
                            RGBA(0,0,0,0)
                    )
                )
                
                //RGBA(204, 208, 225, 1)
            TemplatePadding: =0
            TemplateSize: =42
            Width: =280
            X: =641
            Y: =56
            ZIndex: =3

            Title3_2 As label:
                FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                Height: =42
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: =ThisItem.'Process Group Name'
                Width: =260
                X: =12
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =1

            Rectangle2_2 As rectangle:
                Height: =Parent.TemplateHeight
                OnSelect: =Select(Parent)
                Visible: =ThisItem.IsSelected
                Width: =4
                ZIndex: =4

            icoEditCap_1 As icon.Edit:
                Color: =RGBA(166, 166, 166, 1)
                Height: =29
                Icon: =Icon.Edit
                OnSelect: |-
                    =Select(Parent);
                    UpdateContext({varOpenProcessGroupEdit:true})
                Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
                Width: =35
                X: =237
                Y: =6
                ZIndex: =5

        "'Process Gallery Parent' As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Fill: |-
                =If(varOpenOperatingModelCreate || varEditOM || varOpenCapabilityCreate ||varEditCap || varEditL3Cap || varEditSubCap || varOpenProcessGroupCreate || varOpenProcessGroupEdit || varOpenProcessCreate ||  varEditProcess, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Height: =504
            Items: |-
                =If(
                    IsBlank(txtClientID.Text),
                    Sort(
                        Sort(
                            Filter(
                                Processes,
                                'Process Group'.'Process Group Name' = glyProcessGroup.Selected.'Process Group Name' && Status = 'Status (Processes)'.Active && 'Client Specific' = 'Client Specific (Processes)'.No
                            ),
                            Sequence
                        ),
                        'Process Name'
                    ),
                    Sort(
                        Sort(
                            Filter(
                                Processes,
                                'Process Group'.'Process Group Name' = glyProcessGroup.Selected.'Process Group Name' && Status = 'Status (Processes)'.Active && 'Client Specific' = 'Client Specific (Processes)'.Yes
                            ),
                            Sequence
                        ),
                        'Process Name'
                    )
                 //colFilteredProcesses
                )
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            OnSelect: |
                =//Navigate('Process Detail Screen',ScreenTransition.Cover)
                UpdateContext({varOpenProcessDetail:true});
            TemplateFill: |-
                =If(ThisItem.'Process Name' = 'Process Gallery Parent'.Selected.'Process Name' && 
                        !(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail), 
                     RGBA(204, 208, 225, 1),
                    If (ThisItem.'Process Name' = 'Process Gallery Parent'.Selected.'Process Name' && 
                            (varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail),
                            RGBA(153, 160, 196, 1),
                            RGBA(0,0,0,0)
                    )
                )
                
                //RGBA(204, 208, 225, 1)
            TemplatePadding: =0
            TemplateSize: =42
            Width: =280
            X: =941
            Y: =56
            ZIndex: =4

            Title3_3 As label:
                Color: =RGBA(50, 86, 160, 1)
                FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                Height: =42
                OnSelect: |-
                    =Select(Parent);
                    UpdateContext({varEditProcess:false});
                    UpdateContext({varOpenProcessDetail:true})
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: =ThisItem.'Process Name'
                Underline: =true
                Width: =260
                X: =12
                ZIndex: =1

            Rectangle2_3 As rectangle:
                Height: =Parent.TemplateHeight
                OnSelect: =Select(Parent)
                Visible: =ThisItem.IsSelected
                Width: =4
                ZIndex: =4

            icoEditCap_4 As icon.Edit:
                Color: =RGBA(166, 166, 166, 1)
                Height: =29
                Icon: =Icon.Edit
                OnSelect: |-
                    =Select(Parent);
                    UpdateContext({varEditProcess:true})
                    //UpdateContext({varOpenProcessDetail:true})
                Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
                Width: =35
                X: =237
                Y: =6
                ZIndex: =5

        "'Operating Model Label' As label":
            FontWeight: =FontWeight.Bold
            Height: =44
            Size: =16
            Text: ="Operating Model"
            Width: =270
            X: =49
            Y: =12
            ZIndex: =5

        "'Capability Label' As label":
            FontWeight: =FontWeight.Bold
            Height: =44
            Size: =16
            Text: ="Level 1 Capability"
            Width: =270
            X: =343
            Y: =12
            ZIndex: =6

        "'Process Group Label' As label":
            FontWeight: =FontWeight.Bold
            Height: =44
            Size: =16
            Text: ="Process Group " & varCapLevel
            Width: =270
            X: =641
            Y: =12
            ZIndex: =7

        "'Process Label' As label":
            FontWeight: =FontWeight.Bold
            Height: =44
            Size: =16
            Text: ="Process"
            Width: =270
            X: =941
            Y: =12
            ZIndex: =8

        "'Sub Capability Label' As label":
            FontWeight: =FontWeight.Bold
            Height: =33
            Size: =16
            Text: |-
                ="Level 2 Capability
                "
            Width: =270
            X: =341
            Y: =193
            ZIndex: =9

        "'Create OM Button' As button":
            Color: |-
                =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail,
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            Height: =50
            HoverFill: =ColorFade(RGBA(26, 76, 145, 1), -30%)
            OnSelect: |-
                =UpdateContext({varOpenOperatingModelCreate:true});
                UpdateContext({varOpenCapabilityCreate:false});
                UpdateContext({varOpenProcessGroupCreate:false});
                UpdateContext({varOpenProcessCreate:false});
                UpdateContext({varOpenProcessDetail:false});
                //Reset('New Operating Model Input'); Reset('New Capability Name Input'); Reset('New Process Group Name Input'); Reset('New Process Name Input'); Reset('Description Proc Input');
            Size: =14
            Text: |-
                ="Create Operating Model
                "
            Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
            Width: =280
            X: =26
            Y: =573
            ZIndex: =10

        "'Create Cap Button' As button":
            Color: |-
                =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail,
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            Height: =50
            HoverFill: =ColorFade(RGBA(26, 76, 145, 1), -30%)
            OnSelect: |-
                =UpdateContext({varOpenCapabilityCreate:true});
                UpdateContext({varOpenOperatingModelCreate:false});
                UpdateContext({varOpenProcessGroupCreate:false});
                UpdateContext({varOpenProcessCreate:false});
                UpdateContext({varOpenProcessDetail:false});
                //Reset('New Operating Model Input'); Reset('New Capability Name Input'); Reset('New Process Group Name Input'); Reset('New Process Name Input'); Reset('Description Proc Input');
            Size: =14
            Text: ="Create Capability"
            Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
            Width: =280
            X: =341
            Y: =573
            ZIndex: =11

        "'Create PG Button' As button":
            Color: |-
                =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail,
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            Height: =50
            HoverFill: =ColorFade(RGBA(26, 76, 145, 1), -30%)
            OnSelect: |-
                =UpdateContext({varOpenProcessGroupCreate:true});
                UpdateContext({varOpenOperatingModelCreate:false});
                UpdateContext({varOpenCapabilityCreate:false});
                UpdateContext({varOpenProcessCreate:false});
                UpdateContext({varOpenProcessDetail:false});
                //Reset('New Operating Model Input'); Reset('New Capability Name Input'); Reset('New Process Group Name Input'); Reset('New Process Name Input'); Reset('Description Proc Input');
            Size: =14
            Text: ="Create Process Group"
            Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
            Width: =280
            X: =641
            Y: =573
            ZIndex: =12

        "'Create Process Button' As button":
            Color: |-
                =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail,
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            Height: =50
            HoverFill: =ColorFade(RGBA(26, 76, 145, 1), -30%)
            OnSelect: |-
                =UpdateContext({varOpenProcessCreate:true});
                UpdateContext({varOpenOperatingModelCreate:false});
                UpdateContext({varOpenProcessGroupCreate:false});
                UpdateContext({varOpenCapabilityCreate:false});
                UpdateContext({varOpenProcessDetail:false});
                //Reset('New Operating Model Input'); Reset('New Capability Name Input'); Reset('New Process Group Name Input'); Reset('New Process Name Input'); Reset('Description Proc Input');
                //Clear(colCreateWindowPGFilter)
            Size: =14
            Text: ="Create Process"
            Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
            Width: =280
            X: =941
            Y: =573
            ZIndex: =13

        txtClientID As text:
            Default: =ClientSolutionIdentifier
            Height: =56
            Visible: =false
            Width: =197
            X: =1055
            ZIndex: =14

        glyCapabilityLevel2 As gallery.variableTemplateHeightGallery:
            BorderThickness: =1
            Default: ={}
            DelayItemLoading: =true
            Fill: |-
                =If(varOpenOperatingModelCreate || varEditOM || varOpenCapabilityCreate ||varEditCap || varEditL3Cap || varEditSubCap || varOpenProcessGroupCreate || varOpenProcessGroupEdit || varOpenProcessCreate ||  varEditProcess, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Height: =160
            Items: |-
                =Sort(
                    Sort(
                        colSubCapabilities,
                        'Capability Name'
                    ),
                    Sequence
                )
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            OnSelect: |-
                =ClearCollect(
                    colCapabiilitiesL2,
                    Filter(
                        Capabilities,
                        'Parent Capability'.Capability = glyCapabilityLevel2.Selected.Capability && Status = 'Status (Capabilities)'.Active
                    )
                );
                ClearCollect(
                    colProcessGroups,
                    Filter(
                        'Process Groups',
                        Capability.Capability = glyCapabilityLevel2.Selected.Capability && Status = 'Status (Process Groups)'.Active
                    )
                );
                ClearCollect(
                    colCreateWindowCapacityFilter,
                    Filter(
                        Capabilities,
                        Capability = glyCapabilityLevel2.Selected.Capability && Status = 'Status (Capabilities)'.Active
                    )
                );
                UpdateContext({varCapLevel: "(Level 2)"})
            TemplateFill: |-
                =If(ThisItem.'Capability Name' = glyCapabilityLevel2.Selected.'Capability Name' && 
                        !(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail), 
                    RGBA(204, 208, 225, 1),
                    If (ThisItem.'Capability Name' = glyCapabilityLevel2.Selected.'Capability Name' && 
                            (varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail),
                            RGBA(153, 160, 196, 1),
                            RGBA(0,0,0,0)
                    )
                )
                
                //RGBA(204, 208, 225, 1)
            TemplateSize: =41
            Width: =280
            X: =343
            Y: =226
            ZIndex: =15

            "'L2 Sub Capability Label' As label":
                Height: =41
                OnSelect: |-
                    =Select(Parent);
                    UpdateContext({varExpandCapGal:true})
                Size: =10
                Text: =ThisItem.'Capability Name'
                Width: |
                    =241
                X: =15
                ZIndex: =1

            Rectangle1 As rectangle:
                Height: =41
                OnSelect: =Select(Parent)
                Width: =4
                ZIndex: =5

            icoEditCap_2 As icon.Edit:
                Color: =RGBA(166, 166, 166, 1)
                Height: =29
                Icon: =Icon.Edit
                OnSelect: |-
                    =Select(Parent);
                    UpdateContext({varEditCap:false});
                    UpdateContext({varEditSubCap:true})
                Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
                Width: =35
                X: =221
                Y: =6
                ZIndex: =6

        "glyCapabilityLevel3 As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =2
            DelayItemLoading: =true
            Height: =145
            Items: =Sort(colCapabiilitiesL2, Sequence)
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            OnSelect: |-
                =ClearCollect(
                    colProcessGroups,
                    Filter(
                        'Process Groups',
                        Capability.Capability = glyCapabilityLevel3.Selected.Capability && Status = 'Status (Process Groups)'.Active
                    )
                );
                ClearCollect(
                    colCreateWindowCapacityFilter,
                    Filter(
                        Capabilities,
                        Capability = glyCapabilityLevel3.Selected.Capability
                    )
                );
                UpdateContext({varCapLevel: "(Level 3)"})
            TemplateFill: |-
                =If(ThisItem.'Capability Name' = glyCapabilityLevel3.Selected.'Capability Name' && 
                        !(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate), 
                    RGBA(204, 208, 225, 1),
                    If (ThisItem.'Capability Name' = glyCapabilityLevel3.Selected.'Capability Name' && 
                            (varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate),
                            RGBA(153, 160, 196, 1),
                            If ((varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate) && !(ThisItem.'Capability Name' = glyCapabilityLevel3.Selected.'Capability Name'),
                                RGBA(202,202,202,1),
                                RGBA(255,255,255,1)
                        )
                    )
                )
            TemplatePadding: =0
            TemplateSize: =36
            Width: =280
            X: =345
            Y: =425
            ZIndex: =16

            NextArrow7 As icon.ChevronRight:
                AccessibleLabel: =Self.Tooltip
                Color: =RGBA(166, 166, 166, 1)
                Height: =32
                Icon: =Icon.ChevronRight
                OnSelect: =Select(Parent)
                PaddingBottom: =12
                PaddingLeft: =12
                PaddingRight: =12
                PaddingTop: =12
                Tooltip: ="View item details"
                Width: =32
                X: |
                    =glyCapabilityLevel3.Width - 44
                Y: =2
                ZIndex: =2

            Rectangle7 As rectangle:
                Height: =Parent.TemplateHeight
                OnSelect: =Select(Parent)
                Visible: =ThisItem.IsSelected
                Width: =4
                ZIndex: =4

            Label3 As label:
                Height: =36
                OnSelect: =Select(Parent)
                Size: =11
                Text: =ThisItem.'Capability Name'
                Width: =223
                X: =15
                ZIndex: =5

            icoEditCap_3 As icon.Edit:
                Color: =RGBA(166, 166, 166, 1)
                Height: =32
                Icon: =Icon.Edit
                OnSelect: |-
                    =Select(Parent);
                    UpdateContext({varEditCap:false});
                    UpdateContext({varEditSubCap:false});
                    UpdateContext({varEditL3Cap:true})
                Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
                Width: =33
                X: =226
                Y: =2
                ZIndex: =6

        "'Sub Capability Label_1' As label":
            FontWeight: =FontWeight.Bold
            Height: =44
            Size: =16
            Text: |-
                ="Level 3 Capability
                "
            Width: =270
            X: =341
            Y: =386
            ZIndex: =17

        Label10_1 As label:
            Color: =RGBA(39, 113, 194, 1)
            Height: =31
            OnSelect: |-
                =Launch("https://neudesic.sharepoint.com/:b:/s/NeudesicBusinessApplications/EXkrf6PUErZBislCGh-WarsBuaGL7wAVzsICwSAPhiBtmw?e=nISkZs")
            Text: ="Click here for the Solution Modeler User Guide"
            Underline: =true
            Width: =435
            X: =817
            Y: =623
            ZIndex: =18

    "'Operating Model Screen Label' As label":
        Align: =Align.Center
        Color: |-
            =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail, 
            RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
        Fill: |-
            =If(varOpenOperatingModelCreate || varEditOM || varOpenCapabilityCreate ||varEditCap || varEditL3Cap || varEditSubCap || varOpenProcessGroupCreate || varOpenProcessGroupEdit || varOpenProcessCreate ||  varEditProcess,
                ColorFade(RGBA(26, 76, 145, 1), -30%),
                RGBA(26, 76, 145, 1)
            )
        Font: =Font.'Lato Light'
        FontWeight: =FontWeight.Semibold
        Height: =76
        Size: =26
        Text: |-
            =If(IsBlank(txtClientID.Text) && (chkDraftModels.Value = false || IsBlank(chkDraftModels.Value)) ,
                "Standard Operating Models",
                If(Len(ClientSolutionIdentifier)>0, 
                    "Operating Model(s) for "& dcSolutionName,
                    "Draft Operating Models"
                    )
            )
        Width: =1366
        ZIndex: =3

    "'Back Button_1' As icon.ChevronLeft":
        Color: |-
            =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail, 
            RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
        Height: =45
        Icon: =Icon.ChevronLeft
        OnSelect: |-
            =UpdateContext({varOpenProcessCreate:false});
            UpdateContext({varOpenOperatingModelCreate:false});
            UpdateContext({varOpenProcessGroupCreate:false});
            UpdateContext({varOpenCapabilityCreate:false});
            UpdateContext({varOpenProcessDetail:false});
            UpdateContext({varEditOM:false});
            UpdateContext({varModelPropStarted:false});
            UpdateContext({varAssociateError:false});
            Reset('New Capability Name Input'); Reset(txtProcessGroupName); Reset('New Process Name Input'); Reset('Description Proc Input');
            Reset(glyOperatingModels);Reset(glyCapabilityLevel1);Clear(colSubCapabilities);Clear(colProcessGroups);Reset(chkDraftModels);
            
            If(IsBlank(ClientSolutionIdentifier),
                Back(ScreenTransition.UnCoverRight);
                Navigate(HomePage,ScreenTransition.UnCoverRight);Set(ClientSolutionIdentifier,"")
                ,
                Navigate(ClientSolutions,ScreenTransition.UnCoverRight);Set(ClientSolutionIdentifier,"")
            )
        Width: =45
        X: =18
        Y: =15
        ZIndex: =4

    RelatedOperatingModel_CS_Edit_ComboBox As combobox:
        ChevronBackground: |-
            =ColorValue("#00467f")
        DisplayFields: =["neu_operatingmodelname"]
        Fill: |-
            =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail || varEditCap || varEditL3Cap || varEditSubCap, 
            RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
        Height: =33
        IsSearchable: =false
        Items: =Filter('Operating Models','Client Specific' = false && 'Status Reason'= 'Status Reason (Operating Models)'.Active)
        OnSelect: |-
            =UpdateContext({varOpModelSelected:RelatedOperatingModel_CS_Edit_ComboBox.Selected});
            UpdateContext({varAssociateError:false})
        SearchFields: =["neu_operatingmodelname"]
        SearchItems: =[]
        SelectMultiple: =false
        Size: =12
        Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
        Width: =293
        X: =81
        Y: =572
        ZIndex: =5

    "'Create OM Container' As groupContainer.manualLayoutContainer":
        BorderThickness: =1
        DropShadow: =DropShadow.Semibold
        Fill: =RGBA(255, 255, 255, 1)
        Height: =455
        Visible: =If(varOpenOperatingModelCreate ||varEditOM, true, false)
        Width: =757
        X: =318
        Y: =134
        ZIndex: =6

        "'Create Operating Model Label' As label":
            Align: =Align.Center
            Color: =RGBA(255,255,255,1)
            Fill: |-
                =ColorValue("#00467f")
            Font: =Font.Lato
            FontWeight: =FontWeight.Bold
            Height: =62
            Size: =20
            Text: =If(varEditOM = true,"Edit Operating Model","Create New Operating Model")
            Width: ='Create OM Container'.Width
            Y: =3
            ZIndex: =1

        "'Exit OM Create Icon' As icon.Cancel":
            Color: =RGBA(255, 255, 255, 1)
            Height: =54
            Icon: =Icon.Cancel
            OnSelect: |
                =UpdateContext({varOpenOperatingModelCreate:false});
                UpdateContext({varOMCreated:false});
                UpdateContext({varEditOM:false});
                //Reset('New Operating Model Input');
            Width: =54
            X: ='Create OM Container'.Width - 60
            Y: =3
            ZIndex: =2

        "'Create Button OM' As button":
            DisplayMode: =If(IsBlank(dcEditOMOperatingModelName.Text),DisplayMode.Disabled,DisplayMode.Edit)
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            OnSelect: |+
                = If(chkDraftModels.Value = true,
                
                    If(varOpenOperatingModelCreate,
                        //Create New OM
                        Patch(
                            'Operating Models',
                            Defaults('Operating Models'),
                            {
                                'Operating Model Name':dcEditOMOperatingModelName.Text,
                                'Status Reason':'Status Reason (Operating Models)'.Draft,
                                'Client Specific':'Client Specific (Operating Models)'.No,
                                Model:Model.'Operating Model'
                            }
                        );
                        UpdateContext({varOpenOperatingModelCreate:false}),
                        //Update OM
                            Patch(
                                'Operating Models',
                                glyOperatingModels.Selected,
                                {
                                    'Operating Model Name':dcEditOMOperatingModelName.Text,
                                    'Status Reason':'Status Reason (Operating Models)'.Draft,
                                    Status:'Status (Operating Models)'.Active,
                                    'Client Specific':'Client Specific (Operating Models)'.No
                                }
                        );
                        UpdateContext({varEditOM:false})
                    )
                 ,
                    If(varOpenOperatingModelCreate,
                        //Create New OM
                        Patch(
                            'Operating Models',
                            Defaults('Operating Models'),
                            {
                                'Operating Model Name':dcEditOMOperatingModelName.Text,
                                'Status Reason':'Status Reason (Operating Models)'.Active,
                                'Client Solution Identifier':glyClientSolutionGallery.Selected,
                                'Client Specific':'Client Specific (Operating Models)'.Yes,
                                Model:Model.'Operating Model'
                            }
                        );
                        UpdateContext({varOpenOperatingModelCreate:false}),
                        //Update OM
                            Patch(
                                'Operating Models',
                                glyOperatingModels.Selected,
                                {
                                    'Operating Model Name':dcEditOMOperatingModelName.Text,
                                    'Status Reason':'Status Reason (Operating Models)'.Active,
                                    'Client Solution Identifier':glyClientSolutionGallery.Selected,
                                    Status:'Status (Operating Models)'.Active,
                                    'Client Specific':'Client Specific (Operating Models)'.Yes
                                }
                        );
                        UpdateContext({varEditOM:false})
                    )
                
                 )     
                    
                
                
                
            Text: =If(varOpenOperatingModelCreate,"Create","Update")
            X: =62
            Y: =336
            ZIndex: =3

        "'Operating Model Created Label' As label":
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Text: ="Operating Model was successfully created!"
            Visible: =If(varOMCreated, true, false)
            Width: =367
            X: =222
            Y: =391
            ZIndex: =10

        frmEditOpModel As form:
            DataSource: ='Operating Models'
            Height: =237
            Item: =If(varEditOM = true,glyOperatingModels.Selected,Defaults('Operating Models'))
            Visible: =If(varEditOM || varOpenOperatingModelCreate,true,false)
            Width: =757
            Y: =62
            ZIndex: =13

            "'Client Solution Identifier_DataCard1' As typedDataCard.comboBoxEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_ClientSolution"
                Default: =ThisItem.'Client Solution Identifier'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Operating Models'],DataSourceInfo.DisplayName,"neu_ClientSolution")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =false
                Update: =
                Visible: =If(chkDraftModels.Value = true,false,true)
                Width: =756
                X: =0
                Y: =0
                ZIndex: =1

                DataCardKey23 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                ErrorMessage13 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =ClientSolutionName_Input.Y + ClientSolutionName_Input.Height
                    ZIndex: =3

                StarVisible7 As label:
                    Align: =Align.Center
                    Height: =DataCardKey23.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey23.Y
                    ZIndex: =4

                ClientSolutionName_Input As text:
                    Default: =glyClientSolutionGallery.Selected.'Solution Name'
                    DisplayMode: =DisplayMode.View
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey23.Y + DataCardKey23.Height + 5
                    ZIndex: =5

            "'Operating Model Name_DataCard2' As typedDataCard.textualEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_operatingmodelname"
                Default: =ThisItem.'Operating Model Name'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Operating Models'],DataSourceInfo.DisplayName,"neu_operatingmodelname")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                MaxLength: =DataSourceInfo([@'Operating Models'], DataSourceInfo.MaxLength, "neu_operatingmodelname")
                Required: =true
                Update: =dcEditOMOperatingModelName.Text
                Width: =504
                X: =0
                Y: =1
                ZIndex: =14

                DataCardKey44 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =20
                    Y: =8
                    ZIndex: =1

                dcEditOMOperatingModelName As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =If(varOpenOperatingModelCreate, "",Parent.Default)
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    MaxLength: =Parent.MaxLength
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey44.Y + DataCardKey44.Height + 5
                    ZIndex: =2

                ErrorMessage40 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcEditOMOperatingModelName.Y + dcEditOMOperatingModelName.Height
                    ZIndex: =3

                StarVisible34 As label:
                    Align: =Align.Center
                    Height: =DataCardKey44.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey44.Y
                    ZIndex: =4

        btnDeleteOM As button:
            Fill: |-
                =ColorValue("#00467f")
            OnSelect: |-
                =UpdateContext({varDeleteOM:true})
            Text: ="Delete Operating Model"
            Visible: =If(varEditOM,true,false)
            Width: =261
            X: =303
            Y: =336
            ZIndex: =14

        cntDeleteOMVerification As groupContainer.manualLayoutContainer:
            BorderThickness: =1
            Fill: =RGBA(255, 255, 255, 1)
            Height: =252
            Visible: =If(varDeleteOM,true,false)
            X: =155
            Y: =139
            ZIndex: =15

            lblOMInactiveWarning As label:
                Color: =RGBA(246, 88, 16, 1)
                FontWeight: =FontWeight.Bold
                Height: =153
                Text: |-
                    ="WARNING:   If you delete the Operating Model, all related Capabilities, Process Groups and Processes  THIS IS IRREVERSIBLE.  Note that this only possible if there are no User Stories linked."
                Width: =455
                X: =28
                Y: =16
                ZIndex: =1

            Button7 As button:
                OnSelect: |-
                    =Remove('Operating Models',glyOperatingModels.Selected);
                    UpdateContext({varDeleteOM:false});
                    UpdateContext({varEditOM:false})
                Text: ="DELETE!"
                X: =44
                Y: =184
                ZIndex: =2

            Button8 As button:
                OnSelect: |-
                    =UpdateContext({varDeleteOM:false})
                Text: ="Cancel"
                X: =261
                Y: =184
                ZIndex: =3

    btnAssociateModel As button:
        Color: |-
            =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail, 
            RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
        Fill: |-
            =If(varOpenOperatingModelCreate || varOpenCapabilityCreate || varOpenProcessGroupCreate || varOpenProcessCreate || varOpenProcessDetail,
                ColorFade(RGBA(26, 76, 145, 1), -30%),
                RGBA(26, 76, 145, 1)
            )
        Height: =41
        HoverFill: |-
            =ColorFade(ColorValue("#00467f"), -30%)
        OnSelect: |-
            =If(IsBlank(RelatedOperatingModel_CS_Edit_ComboBox.Selected),UpdateContext({varAssociateError:true}),
                If(IsBlank(ClientSolutionIdentifier),
                    CopyStandardModeltoDraftModel.Run(varOpModelSelected.'Operating Model Name'),
                    CopyOperatingModeltoClientSolution.Run(varOpModelSelected.'Operating Model Name',dcClientSolutionID.Text, dcSolutionName.Text,dcClientProspectName.Text);
            );
            UpdateContext({varModelPropStarted:true});
            Reset(RelatedOperatingModel_CS_Edit_ComboBox)
            )
        Text: ="Associate Model"
        Tooltip: ="Select a Standard Operating Model from the above drop down to copy it into this Client Solution"
        Visible: =If(Len(txtClientID.Text)>0 || chkDraftModels.Value = true,true,false)
        Width: =204
        X: =125
        Y: =610
        ZIndex: =7

    "'Create Cap Container' As groupContainer.manualLayoutContainer":
        DropShadow: =DropShadow.Semibold
        Fill: =RGBA(255, 255, 255, 1)
        Height: =587
        Visible: =If(varOpenCapabilityCreate ||varEditCap || varEditL3Cap || varEditSubCap, true, false)
        Width: =800
        X: =147
        Y: =91
        ZIndex: =8

        "'Create Capability Label' As label":
            Align: =Align.Center
            Color: |-
                =ColorValue("#FFFFFF")
            Fill: |-
                =ColorValue("#00467f")
            Font: =Font.Lato
            FontWeight: =FontWeight.Bold
            Height: =62
            Size: =20
            Text: =If(varEditCap || varEditL3Cap || varEditSubCap, "Edit Capability","Create New Capability")
            Width: ='Create Cap Container'.Width
            ZIndex: =1

        "'Exit Cap Create Icon' As icon.Cancel":
            Color: =RGBA(255, 255, 255, 1)
            Height: =54
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({varOpenCapabilityCreate:false});
                UpdateContext({varCapCreated:false});
                UpdateContext({varEditSubCap:false});
                UpdateContext({varEditCap:false});
                UpdateContext({varEditL3Cap:false});
                Reset('New Capability Name Input');
            Width: =54
            X: ='Create Cap Container'.Width - 60
            Y: =3
            ZIndex: =2

        btnCreateCapability As button:
            DisplayMode: =If(IsBlank('New Capability Name Input'.Text) || IsBlank('Operating Model Cap Dropdown'.Selected),DisplayMode.Disabled,DisplayMode.Edit)
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: |-
                =Patch(
                    Capabilities,
                    Defaults(Capabilities),
                    {
                        'Capability Name':'New Capability Name Input'.Text,
                        'Operating Model':'Operating Model Cap Dropdown'.Selected,
                        'Parent Capability':'Parent Capability Combobox'.Selected,
                        'Status Reason':'Status Reason (Capabilities)'.Active,
                        'Scope Review':'Scope Review Cap Dropdown'.Selected.Value,
                        Model:Model.'Operating Model',
                        Sequence:Value(txtCapSequence.Text)
                    }
                );
                Reset('Parent Capability Combobox');
                UpdateContext({varOpenCapabilityCreate:false});
                UpdateContext({varEditCap:false});
                UpdateContext({varEditL3Cap:false});
                Reset('New Capability Name Input');
                Reset(txtCapSequence)
            Text: |-
                ="Create
                "
            Visible: =If(varOpenCapabilityCreate,true,false)
            X: =89
            Y: =499
            ZIndex: =3

        "'New Capability Name Input' As text":
            Default: =""
            Height: =35
            OnSelect: |-
                =UpdateContext({varCapCreated:false})
            Reset: =
            Size: =12
            Visible: =If(varEditCap ||varEditL3Cap || varEditSubCap, false,true)
            Width: =434
            X: =89
            Y: =134
            ZIndex: =4

        "'New Capability Name Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="* Capability Name"
            Visible: =If(varEditCap ||varEditL3Cap || varEditSubCap, false,true)
            Width: =307
            X: =75
            Y: =94
            ZIndex: =5

        "'Operating Model Cap Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="Operating Model"
            Visible: =If(varEditCap ||varEditL3Cap || varEditSubCap, false,true)
            Width: =307
            X: =89
            Y: =175
            ZIndex: =6

        "'Scope Review Cap Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="Scope Review"
            Visible: =If(varEditCap ||varEditL3Cap || varEditSubCap, false,true)
            Width: =307
            X: =89
            Y: =364
            ZIndex: =8

        "'Scope Review Cap Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            Default: ="In Review"
            Height: =35
            Items: =Choices('Scope Review')
            Size: =12
            Visible: =If(varEditCap ||varEditL3Cap || varEditSubCap, false,true)
            Width: =284
            X: =89
            Y: =404
            ZIndex: =9

        "'Parent Capability Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="Parent Capability"
            Visible: =If(varEditCap ||varEditL3Cap || varEditSubCap, false,true)
            Width: =307
            X: =89
            Y: =263
            ZIndex: =10

        "'Parent Capability Combobox' As combobox":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            DisplayFields: =["neu_capabilityname"]
            Height: =35
            IsSearchable: =false
            Items: |-
                =Sort(
                    Sort(
                        Filter(
                            Capabilities,
                            'Operating Model'.'Operating Model' = 'Operating Model Cap Dropdown'.Selected.'Operating Model' && Status = 'Status (Capabilities)'.Active && 'Is L3 Capability' = 'Is L3 Capability (Capabilities)'.No
                        ),
                        Sequence
                    ),
                    'Capability Name'
                )
            SearchFields: =["neu_capabilityname"]
            SearchItems: =[]
            SelectMultiple: =false
            Size: =12
            Visible: =If(varEditCap ||varEditL3Cap || varEditSubCap, false,true)
            X: =89
            Y: =303
            ZIndex: =11

        "'Operating Model Cap Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            Height: =35
            Items: |-
                =If(
                    IsBlank(ClientSolutionIdentifier),
                    Filter(
                        'Operating Models',
                        'Status Reason' = 'Status Reason (Operating Models)'.Draft
                    ),
                    Filter(
                        'Operating Models',
                        'Client Solution Identifier'.'Client Solution' = GUID(ClientSolutionIdentifier)
                    )
                )
            OnChange: =Reset('Parent Capability Combobox')
            Size: =12
            Visible: =If(varEditCap ||varEditL3Cap || varEditSubCap, false,true)
            X: =89
            Y: =215
            ZIndex: =12

        "'Reset Operating Model Cap Button' As button":
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: =ClearCollect(colOperatingModelFilter,Filter('Operating Models','Operating Model Name', Status = 'Status (Operating Models)'.Active))
            Text: |-
                ="Reset
                "
            Visible: |-
                =//If(varEditCap = true, false,true)
                false
            Width: =146
            X: =442
            Y: =215
            ZIndex: =13

        "'Reset Parent Capability Button' As button":
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: =Reset('Parent Capability Combobox')
            Text: |-
                ="Reset
                "
            Visible: |-
                =//If(varEditCap = true, false,true)
                false
            Width: =146
            X: =442
            Y: =303
            ZIndex: =14

        frmEditCapability As form:
            DataSource: =Capabilities
            Item: |-
                =If(varEditSubCap,
                    glyCapabilityLevel2.Selected,
                        If(varEditCap, glyCapabilityLevel1.Selected,
                        glyCapabilityLevel3.Selected
                        )
                )
            Visible: =If(varEditCap || varEditSubCap || varEditL3Cap,true,false)
            Width: =558
            X: =71
            Y: =69
            ZIndex: =17

            "'Operating Model_DataCard4' As typedDataCard.comboBoxEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_OperatingModelID"
                Default: =ThisItem.'Operating Model'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Capabilities],DataSourceInfo.DisplayName,"neu_OperatingModelID")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =false
                Update: =dcCapEditOpModelName.Selected
                Width: =372
                X: =0
                Y: =0
                ZIndex: =1

                DataCardKey43 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =If(IsBlank(dcCapEditParentCapability.Selected),"* Operating Model","Operating Model")
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcCapEditOpModelName As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =Parent.Default
                    DisplayFields: =["neu_operatingmodelname"]
                    IsSearchable: =false
                    Items: |
                        =If(Len(ClientSolutionIdentifier)>0,
                        Filter('Operating Models','Client Solution Identifier'.'Client Solution' = GUID(ClientSolutionIdentifier)),
                        Filter('Operating Models', 'Status Reason' = 'Status Reason (Operating Models)'.Draft)
                        )
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["neu_operatingmodelname"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey43.Y + DataCardKey43.Height + 5
                    ZIndex: =2

                ErrorMessage39 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcCapEditOpModelName.Y + dcCapEditOpModelName.Height
                    ZIndex: =3

                StarVisible33 As label:
                    Align: =Align.Center
                    Height: =DataCardKey43.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey43.Y
                    ZIndex: =4

            "'Parent Capability_DataCard3' As typedDataCard.comboBoxEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_ParentCapability"
                Default: =ThisItem.'Parent Capability'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Capabilities],DataSourceInfo.DisplayName,"neu_ParentCapability")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =41
                Required: =false
                Update: =dcCapEditParentCapability.Selected
                Width: =372
                X: =0
                Y: =2
                ZIndex: =1

                DataCardKey42 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcCapEditParentCapability As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =Parent.Default
                    DisplayFields: =["neu_capabilityname"]
                    DisplayMode: =Parent.DisplayMode
                    IsSearchable: =false
                    Items: |-
                        =//Choices([@Capabilities].neu_ParentCapability)
                        //Filter(Capabilities,'Operating Model'.'Operating Model Name' = 'Capability Level 1 Gallery'.Selected.'Operating Model'.'Operating Model Name' && Capability <> GUID(dcCapabilityID.Text))
                        Filter(Capabilities,'Operating Model'.'Operating Model Name' = dcCapEditOpModelName.Selected.'Operating Model Name' && 'Capability Name' <> dcCapEditCapabilityNameCap.Text  && 'Is L3 Capability' = 'Is L3 Capability (Capabilities)'.No && Status = 'Status (Capabilities)'.Active)
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["neu_capabilityname"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey42.Y + DataCardKey42.Height + 5
                    ZIndex: =2

                ErrorMessage38 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcCapEditParentCapability.Y + dcCapEditParentCapability.Height
                    ZIndex: =3

                StarVisible32 As label:
                    Align: =Align.Center
                    Height: =DataCardKey42.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey42.Y
                    ZIndex: =4

            Capability_DataCard3 As typedDataCard.textualViewCard:
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_capabilityid"
                Default: =ThisItem.Capability
                DisplayMode: =DisplayMode.View
                DisplayName: =DataSourceInfo([@Capabilities],DataSourceInfo.DisplayName,"neu_capabilityid")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =40
                Required: =false
                Visible: =false
                Width: =186
                X: =1
                Y: =3
                ZIndex: =1

                DataCardKey21 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcCapabilityID As label:
                    AutoHeight: =true
                    DisplayMode: =Parent.DisplayMode
                    Height: =27
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Default
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey21.Y + DataCardKey21.Height + 5
                    ZIndex: =2

            Sequence_DataCard7 As typedDataCard.numberEditCard:
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_sequence"
                Default: =ThisItem.Sequence
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Capabilities],DataSourceInfo.DisplayName,"neu_sequence")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =false
                Update: =Value(dcCapEditSequence.Text)
                Width: =186
                X: =2
                Y: =3
                ZIndex: =1

                DataCardKey68 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcCapEditSequence As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    Format: =TextFormat.Number
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey68.Y + DataCardKey68.Height + 5
                    ZIndex: =2

                ErrorMessage64 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcCapEditSequence.Y + dcCapEditSequence.Height
                    ZIndex: =3

                StarVisible58 As label:
                    Align: =Align.Center
                    Height: =DataCardKey68.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey68.Y
                    ZIndex: =4

            "'Capability Name_DataCard3' As typedDataCard.textualEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_capabilityname"
                Default: =ThisItem.'Capability Name'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Capabilities],DataSourceInfo.DisplayName,"neu_capabilityname")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                MaxLength: =DataSourceInfo([@Capabilities], DataSourceInfo.MaxLength, "neu_capabilityname")
                Required: =true
                Update: =dcCapEditCapabilityNameCap.Text
                Width: =558
                X: =0
                Y: =1
                ZIndex: =21

                DataCardKey39 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcCapEditCapabilityNameCap As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    MaxLength: =Parent.MaxLength
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey39.Y + DataCardKey39.Height + 5
                    ZIndex: =2

                ErrorMessage35 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcCapEditCapabilityNameCap.Y + dcCapEditCapabilityNameCap.Height
                    ZIndex: =3

                StarVisible29 As label:
                    Align: =Align.Center
                    Height: =DataCardKey39.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey39.Y
                    ZIndex: =4

            "'Status Reason Data Control' As typedDataCard.comboBoxOptionSetSingleEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="statuscode"
                Default: =ThisItem.'Status Reason'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Capabilities],DataSourceInfo.DisplayName,"statuscode")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =true
                Update: =CapEditStatusReason.Selected.Value
                Width: =186
                X: =2
                Y: =2
                ZIndex: =21

                DataCardKey40 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                CapEditStatusReason As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =[Parent.Default]
                    DisplayFields: =["Value"]
                    DisplayMode: =Parent.DisplayMode
                    IsSearchable: =false
                    Items: =Choices('Status Reason (Capabilities)')
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["Value"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey40.Y + DataCardKey40.Height + 5
                    ZIndex: =2

                ErrorMessage36 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =CapEditStatusReason.Y + CapEditStatusReason.Height
                    ZIndex: =3

                StarVisible30 As label:
                    Align: =Align.Center
                    Height: =DataCardKey40.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey40.Y
                    ZIndex: =4

            "'Scope Review_DataCard3' As typedDataCard.comboBoxOptionSetSingleEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_scopereview"
                Default: =ThisItem.'Scope Review'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Capabilities],DataSourceInfo.DisplayName,"neu_scopereview")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =true
                Update: =dcCapEditScopeReview.Selected.Value
                Width: =186
                X: =0
                Y: =3
                ZIndex: =21

                DataCardKey41 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcCapEditScopeReview As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =[Parent.Default]
                    DisplayFields: =["Value"]
                    DisplayMode: =Parent.DisplayMode
                    IsSearchable: =false
                    Items: =Choices('Scope Review')
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["Value"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey41.Y + DataCardKey41.Height + 5
                    ZIndex: =2

                ErrorMessage37 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcCapEditScopeReview.Y + dcCapEditScopeReview.Height
                    ZIndex: =3

                StarVisible31 As label:
                    Align: =Align.Center
                    Height: =DataCardKey41.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey41.Y
                    ZIndex: =4

        btnUpdateCapability As button:
            DisplayMode: =If(IsBlank(dcCapEditCapabilityNameCap.Text) || IsBlank(dcCapEditOpModelName.Selected),DisplayMode.Disabled,DisplayMode.Edit)
            OnSelect: |-
                =If(varEditCap,
                
                    If(CapEditStatusReason.Selected.Value = 'Status Reason (Capabilities)'.Inactive,
                
                        Patch(Capabilities,
                            glyCapabilityLevel1.Selected,
                            {
                            'Operating Model':dcCapEditOpModelName.Selected,
                            'Capability Name':dcCapEditCapabilityNameCap.Text,
                            'Scope Review':dcCapEditScopeReview.Selected.Value,
                            'Parent Capability':dcCapEditParentCapability.Selected,
                            Status:'Status (Capabilities)'.Inactive,
                            'Status Reason':'Status Reason (Capabilities)'.Inactive,
                            Sequence:Value(dcCapEditSequence.Text)
                            }
                        ),
                            Patch(Capabilities,
                            glyCapabilityLevel1.Selected,
                            {
                            'Operating Model':dcCapEditOpModelName.Selected,
                            'Capability Name':dcCapEditCapabilityNameCap.Text,
                            'Scope Review':dcCapEditScopeReview.Selected.Value,
                            'Parent Capability':dcCapEditParentCapability.Selected,
                            Status:'Status (Capabilities)'.Active,
                            'Status Reason':CapEditStatusReason.Selected.Value,
                            Sequence:Value(dcCapEditSequence.Text)
                            }
                        )
                    ),
                        If(varEditSubCap,
                            If(CapEditStatusReason.Selected.Value = 'Status Reason (Capabilities)'.Inactive,
                
                            Patch(Capabilities,
                                glyCapabilityLevel2.Selected,
                                {
                                'Operating Model':dcCapEditOpModelName.Selected,
                                'Capability Name':dcCapEditCapabilityNameCap.Text,
                                'Scope Review':dcCapEditScopeReview.Selected.Value,
                                'Parent Capability':dcCapEditParentCapability.Selected,
                                Status:'Status (Capabilities)'.Inactive,
                                'Status Reason':'Status Reason (Capabilities)'.Inactive,
                                Sequence:Value(dcCapEditSequence.Text)
                                }
                            ),
                                Patch(Capabilities,
                                glyCapabilityLevel2.Selected,
                                {
                                'Operating Model':dcCapEditOpModelName.Selected,
                                'Capability Name':dcCapEditCapabilityNameCap.Text,
                                'Scope Review':dcCapEditScopeReview.Selected.Value,
                                'Parent Capability':dcCapEditParentCapability.Selected,
                                Status:'Status (Capabilities)'.Active,
                                'Status Reason':CapEditStatusReason.Selected.Value,
                                Sequence:Value(dcCapEditSequence.Text)
                                }
                                )
                        ),
                        If(varEditL3Cap,
                            If(CapEditStatusReason.Selected.Value = 'Status Reason (Capabilities)'.Inactive,
                
                                Patch(Capabilities,
                                    glyCapabilityLevel3.Selected,
                                    {
                                    'Operating Model':dcCapEditOpModelName.Selected,
                                    'Capability Name':dcCapEditCapabilityNameCap.Text,
                                    'Scope Review':dcCapEditScopeReview.Selected.Value,
                                    'Parent Capability':dcCapEditParentCapability.Selected,
                                    Status:'Status (Capabilities)'.Inactive,
                                    'Status Reason':'Status Reason (Capabilities)'.Inactive,
                                    Sequence:Value(dcCapEditSequence.Text)
                                    }
                                ),
                                    Patch(Capabilities,
                                    glyCapabilityLevel3.Selected,
                                    {
                                    'Operating Model':dcCapEditOpModelName.Selected,
                                    'Capability Name':dcCapEditCapabilityNameCap.Text,
                                    'Scope Review':dcCapEditScopeReview.Selected.Value,
                                    'Parent Capability':dcCapEditParentCapability.Selected,
                                    Status:'Status (Capabilities)'.Active,
                                    'Status Reason':CapEditStatusReason.Selected.Value,
                                    Sequence:Value(dcCapEditSequence.Text)
                                    }
                                )
                            )
                        )
                    )
                );
                UpdateContext({varOpenCapabilityCreate:false});
                UpdateContext({varCapCreated:false});
                UpdateContext({varEditSubCap:false});
                UpdateContext({varEditCap:false});
                UpdateContext({varEditL3Cap:false});
                Reset('New Capability Name Input');
                ClearCollect(colSubCapabilities, Filter(Capabilities,'Parent Capability'.Capability = glyCapabilityLevel1.Selected.Capability && Status = 'Status (Capabilities)'.Active));
                ClearCollect(colProcessGroups, Filter('Process Groups', Capability.Capability = glyCapabilityLevel1.Selected.Capability && Status = 'Status (Process Groups)'.Active));
                ClearCollect(colCreateWindowCapacityFilter, Filter(Capabilities, Capability = glyCapabilityLevel1.Selected.Capability && Status = 'Status (Capabilities)'.Active));
                Clear(colCapabiilitiesL2);
            Text: ="Update"
            Visible: |
                =If(varEditCap || varEditSubCap || varEditL3Cap, true,false)
            X: =89
            Y: =487
            ZIndex: =18

        txtCapSequence As text:
            Default: =""
            Height: =37
            Visible: =If(varOpenCapabilityCreate, true, false)
            Width: =168
            X: =420
            Y: =402
            ZIndex: =19

        lblCreateCapSequence As label:
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="Sequence"
            Visible: =If(varEditCap ||varEditL3Cap || varEditSubCap, false,true)
            Width: =307
            X: =420
            Y: =358
            ZIndex: =20

    "'Create Process Group Container' As groupContainer.manualLayoutContainer":
        Fill: =RGBA(255, 255, 255, 1)
        Height: =481
        Visible: =If(varOpenProcessGroupCreate || varOpenProcessGroupEdit, true, false)
        Width: =826
        X: =276
        Y: =214
        ZIndex: =9

        "'Create Capability Label_1' As label":
            Align: =Align.Center
            Color: |-
                =ColorValue("#FFFFFF")
            Fill: |-
                =ColorValue("#00467f")
            Font: =Font.Lato
            FontWeight: =FontWeight.Bold
            Height: =62
            Size: =20
            Text: =If(varOpenProcessGroupCreate, "Create New Process Group","Edit Process Group")
            Width: ='Create Process Group Container'.Width
            ZIndex: =1

        "'Exit Cap Create Icon_1' As icon.Cancel":
            Color: =RGBA(255, 255, 255, 1)
            Height: =54
            Icon: =Icon.Cancel
            OnSelect: |
                =UpdateContext({varOpenProcessGroupCreate:false});
                UpdateContext({varPGCreated:false});
                UpdateContext({varOpenProcessGroupEdit:false});
                Reset(txtProcessGroupName);
                //Reset('Operating Model PG Dropdown');
                Reset(ddCapability);
            Width: =54
            X: ='Create Process Group Container'.Width - 60
            Y: =3
            ZIndex: =2

        "'Create Capability Button_1' As button":
            DisplayMode: =If(IsBlank(ddCapability.Selected) || IsBlank(txtProcessGroupName.Text),DisplayMode.Disabled,DisplayMode.Edit)
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: |-
                =Patch(
                    'Process Groups',
                    Defaults('Process Groups'),
                    {
                        'Process Group Name': txtProcessGroupName.Text,
                        Capability: ddCapability.Selected,
                        'Scope Review': 'Scope Review PG Dropdown'.Selected.Value,
                        Model: Model.'Operating Model',
                        'Status Reason': 'Status Reason (Process Groups)'.Active,
                        Sequence: Value(txtNewProcessSequence.Text)
                    }
                );
                UpdateContext({varOpenProcessGroupCreate: false});
                Reset(txtProcessGroupName);
                ClearCollect(
                    colProcessGroups,
                    Filter(
                        'Process Groups',
                        Capability.Capability = ddCapability.Selected.Capability && Status = 'Status (Process Groups)'.Active
                    )
                );
                ClearCollect(
                    colSelectedCapability,
                    Filter(
                        Capabilities,
                        Capability = ddCapability.Selected.Capability
                    )
                );
                If(
                    IsBlank(First(colSelectedCapability).'Parent Capability'.Capability),
                    UpdateContext({varCapLevel:"Level 1"}),
                    If(
                        ddCapability.Selected.'Is L3 Capability' = 'Is L3 Capability (Capabilities)'.Yes,
                        UpdateContext({varCapLevel:"Level 3"}),
                        UpdateContext({varCapLevel:"Level 2"})
                        )
                    );
            Text: |-
                ="Create
                "
            Visible: =If(varOpenProcessGroupCreate, true,false)
            X: =86
            Y: =426
            ZIndex: =3

        txtProcessGroupName As text:
            Default: =""
            Height: =35
            OnSelect: |-
                =UpdateContext({varPGCreated:false})
            Reset: =
            Size: =12
            Visible: =If(varOpenProcessGroupCreate,true,false)
            Width: =434
            X: =86
            Y: =224
            ZIndex: =4

        "'New Process Group Name Label' As label":
            Color: =RGBA(0,0,0,1)
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="* Process Group Name"
            Visible: =If(varOpenProcessGroupCreate,true,false)
            Width: =307
            X: =86
            Y: =184
            ZIndex: =5

        "'Process Group Created Label' As label":
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Text: ="Process Group was successfully created!"
            Visible: =If(varPGCreated, true, false)
            Width: =367
            X: =221
            Y: =466
            ZIndex: =7

        "'Scope Review PG Label' As label":
            Color: =RGBA(0,0,0,1)
            FontWeight: =FontWeight.Semibold
            Height: =23
            Size: =14
            Text: ="Scope Review"
            Visible: =If(varOpenProcessGroupCreate,true,false)
            Width: =307
            X: =92
            Y: =281
            ZIndex: =8

        "'Scope Review PG Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Default: ="In Review"
            Height: =35
            Items: =Choices('Scope Review')
            Size: =12
            Visible: =If(varOpenProcessGroupCreate,true,false)
            Width: =240
            X: =92
            Y: =317
            ZIndex: =9

        "'Capability PG Label' As label":
            Color: =RGBA(0,0,0,1)
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="* Capability"
            Visible: =If(varOpenProcessGroupCreate,true,false)
            Width: =307
            X: =86
            Y: =97
            ZIndex: =10

        ddCapability As dropdown:
            AllowEmptySelection: =true
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Default: |-
                =If(
                    varCapLevel = "(Level 1)",
                    glyCapabilityLevel1.Selected.'Capability Name',
                    If(
                        varCapLevel = "(Level 2)",
                        glyCapabilityLevel2.Selected.'Capability Name',
                        glyCapabilityLevel3.Selected.'Capability Name'
                    )
                )
            Height: =35
            Items: |+
                =//colCreateWindowCapacityFilter
                Filter(Capabilities,'Operating Model'.'Operating Model Name' = glyOperatingModels.Selected.'Operating Model Name' && Status = 'Status (Capabilities)'.Active)
                
                
                
                
            OnChange: =
            OnSelect: =
            Size: =12
            Visible: =If(varOpenProcessGroupCreate,true,false)
            Width: =310
            X: =86
            Y: =137
            ZIndex: =12

        frmEditProcessGroup As form:
            DataSource: ='Process Groups'
            Height: =421
            Item: =glyProcessGroup.Selected
            Visible: =If(varOpenProcessGroupEdit, true, false)
            Width: =629
            X: =58
            Y: =74
            ZIndex: =14

            Capability_DataCard2 As typedDataCard.comboBoxEditCard:
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_CapabilityID"
                Default: =ThisItem.Capability
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Process Groups'],DataSourceInfo.DisplayName,"neu_CapabilityID")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =false
                Update: =dcPGEditCapability.Selected
                Width: =418
                X: =0
                Y: =0
                ZIndex: =1

                DataCardKey32 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcPGEditCapability As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =Parent.Default
                    DisplayFields: =["neu_capabilityname"]
                    IsSearchable: =false
                    Items: |+
                        =//colCreateWindowCapacityFilter
                        Filter(Capabilities,'Operating Model'.'Operating Model Name' = glyOperatingModels.Selected.'Operating Model Name' && Status = 'Status (Capabilities)'.Active)
                        
                    OnSelect: =
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["neu_capabilityname"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey32.Y + DataCardKey32.Height + 5
                    ZIndex: =2

                ErrorMessage27 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    OnSelect: =ClearCollect(colCreateWindowCapacityFilter,Filter(Capabilities, 'Operating Model'.'Operating Model' = glyOperatingModels.Selected.'Operating Model'))
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcPGEditCapability.Y + dcPGEditCapability.Height
                    ZIndex: =3

                StarVisible21 As label:
                    Align: =Align.Center
                    Height: =DataCardKey32.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey32.Y
                    ZIndex: =4

            Sequence_DataCard6 As typedDataCard.numberEditCard:
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_sequence"
                Default: =ThisItem.Sequence
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Process Groups'],DataSourceInfo.DisplayName,"neu_sequence")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =false
                Update: =Value(dcProcessGroupSequence.Text)
                Width: =209
                X: =2
                Y: =1
                ZIndex: =1

                DataCardKey66 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcProcessGroupSequence As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    Format: =TextFormat.Number
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey66.Y + DataCardKey66.Height + 5
                    ZIndex: =2

                ErrorMessage63 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcProcessGroupSequence.Y + dcProcessGroupSequence.Height
                    ZIndex: =3

                StarVisible27 As label:
                    Align: =Align.Center
                    Height: =DataCardKey66.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey66.Y
                    ZIndex: =4

            "'Process Group Name Data Card' As typedDataCard.textualEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_processgroupname"
                Default: =ThisItem.'Process Group Name'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Process Groups'],DataSourceInfo.DisplayName,"neu_processgroupname")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                MaxLength: =DataSourceInfo([@'Process Groups'], DataSourceInfo.MaxLength, "neu_processgroupname")
                Required: =true
                Update: =dcPGEditPGName.Text
                Width: =418
                X: =0
                Y: =1
                ZIndex: =18

                DataCardKey27 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcPGEditPGName As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    MaxLength: =Parent.MaxLength
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey27.Y + DataCardKey27.Height + 5
                    ZIndex: =2

                ErrorMessage23 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    Y: =88
                    ZIndex: =3

                StarVisible15 As label:
                    Align: =Align.Center
                    Height: =DataCardKey27.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey27.Y
                    ZIndex: =4

            "'Scope Review_DataCard1' As typedDataCard.comboBoxOptionSetSingleEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_scopereview"
                Default: =ThisItem.'Scope Review'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Process Groups'],DataSourceInfo.DisplayName,"neu_scopereview")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =true
                Update: =dcPGEditScopeReview.Selected.Value
                Width: =209
                X: =0
                Y: =2
                ZIndex: =18

                DataCardKey30 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcPGEditScopeReview As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =[Parent.Default]
                    DisplayFields: =["Value"]
                    DisplayMode: =Parent.DisplayMode
                    IsSearchable: =false
                    Items: =Choices('Scope Review')
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["Value"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey30.Y + DataCardKey30.Height + 5
                    ZIndex: =2

                ErrorMessage25 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcPGEditScopeReview.Y + dcPGEditScopeReview.Height
                    ZIndex: =3

                StarVisible19 As label:
                    Align: =Align.Center
                    Height: =DataCardKey30.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey30.Y
                    ZIndex: =4

            "'Status Reason_DataCard1' As typedDataCard.comboBoxOptionSetSingleEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="statuscode"
                Default: =ThisItem.'Status Reason'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Process Groups'],DataSourceInfo.DisplayName,"statuscode")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =true
                Update: =dcPGEditStatusReason.Selected.Value
                Width: =209
                X: =1
                Y: =2
                ZIndex: =18

                DataCardKey31 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcPGEditStatusReason As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =[Parent.Default]
                    DisplayFields: =["Value"]
                    DisplayMode: =Parent.DisplayMode
                    IsSearchable: =false
                    Items: =Choices('Status Reason (Process Groups)')
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["Value"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey31.Y + DataCardKey31.Height + 5
                    ZIndex: =2

                ErrorMessage26 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcPGEditStatusReason.Y + dcPGEditStatusReason.Height
                    ZIndex: =3

                StarVisible20 As label:
                    Align: =Align.Center
                    Height: =DataCardKey31.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey31.Y
                    ZIndex: =4

        btnUpdateProcessGroup As button:
            DisplayMode: =If(IsBlank(dcPGEditPGName.Text), DisplayMode.Disabled, DisplayMode.Edit)
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: |-
                =If(
                    dcPGEditStatusReason.Selected.Value = 'Status Reason (Process Groups)'.Inactive,
                    //Update to Inactive State
                    Patch(
                        'Process Groups',
                        glyProcessGroup.Selected,
                        {
                            Capability: dcPGEditCapability.Selected,
                            'Process Group Name': dcPGEditPGName.Text,
                            'Scope Review': dcPGEditScopeReview.Selected.Value,
                            Status: 'Status (Process Groups)'.Inactive
                        }
                    ),
                    //Update to Active State
                    Patch(
                        'Process Groups',
                        glyProcessGroup.Selected,
                        {
                            Capability: dcPGEditCapability.Selected,
                            'Process Group Name': dcPGEditPGName.Text,
                            'Scope Review': dcPGEditScopeReview.Selected.Value,
                            'Status Reason': dcPGEditStatusReason.Selected.Value,
                            Sequence: Value(dcProcessGroupSequence.Text)
                        }
                    )
                );
                UpdateContext({varOpenProcessGroupEdit: false});
                    ClearCollect(
                        colProcessGroups,
                        Filter(
                            'Process Groups',
                            Capability.Capability = dcPGEditCapability.Selected.Capability && Status = 'Status (Process Groups)'.Active
                       )
                    );
                    ClearCollect(
                    colSelectedCapability,
                    Filter(
                        Capabilities,
                        Capability = dcPGEditCapability.Selected.Capability
                    )
                );
                If(
                    IsBlank(First(colSelectedCapability).'Parent Capability'.Capability),
                    UpdateContext({varCapLevel:"Level 1"}),
                    If(
                        dcPGEditCapability.Selected.'Is L3 Capability' = 'Is L3 Capability (Capabilities)'.Yes,
                        UpdateContext({varCapLevel:"Level 3"}),
                        UpdateContext({varCapLevel:"Level 2"})
                        )
                    );
            Text: ="Update"
            Visible: =If(varOpenProcessGroupEdit, true,false)
            X: =86
            Y: =404
            ZIndex: =15

        txtNewProcessSequence As text:
            Default: =""
            Format: =TextFormat.Number
            Visible: =If(varOpenProcessGroupCreate,true,false)
            Width: =138
            X: =382
            Y: =312
            ZIndex: =16

        lblSequence As label:
            Color: =RGBA(0,0,0,1)
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="Sequence"
            Visible: =If(varOpenProcessGroupCreate,true,false)
            Width: =307
            X: =382
            Y: =272
            ZIndex: =17

    "'Create Process Container' As groupContainer.manualLayoutContainer":
        DropShadow: =DropShadow.Semibold
        Fill: =RGBA(255, 255, 255, 1)
        Height: =683
        Visible: =If(varOpenProcessCreate, true, false)
        Width: =1160
        X: =99
        Y: =65
        ZIndex: =10

        lblCreateProcess As label:
            Align: =Align.Center
            Color: |-
                =ColorValue("#FFFFFF")
            Fill: |-
                =ColorValue("#00467f")
            Font: =Font.Lato
            FontWeight: =FontWeight.Bold
            Height: =62
            Size: =20
            Text: ="Create New Process"
            Width: ='Create Process Container'.Width
            ZIndex: =1

        "'Exit Cap Create Icon_2' As icon.Cancel":
            Color: =RGBA(255, 255, 255, 1)
            Height: =54
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({varOpenProcessCreate:false});
                UpdateContext({varProcCreated:false});
                Reset('New Process Name Input'); Reset( 'Description Proc Input');
            Width: =54
            X: ='Create Process Container'.Width - 60
            Y: =3
            ZIndex: =2

        "'New Process Name Input' As text":
            Default: =""
            Height: =35
            OnChange: =
            OnSelect: |-
                =UpdateContext({varProcCreated:false})
            Width: =434
            X: =63
            Y: =133
            ZIndex: =3

        "'New Process Name Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="* New Process Name"
            Width: =307
            X: =49
            Y: =93
            ZIndex: =4

        btnCreateProcess As button:
            DisplayMode: =If(IsBlank('New Process Name Input'.Text) || IsBlank('Description Proc Input'.Text), DisplayMode.Disabled, DisplayMode.Edit)
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: |-
                =If(chkDraftModels.Value = true,
                
                    If(IsBlank('Data Flow Diagram URL Input'.Text),
                        Patch(
                            Processes,
                            Defaults(Processes),
                            {
                                'Process Name':'New Process Name Input'.Text,
                                'Process Group':ddProcessGroupSelection.Selected,
                                Description:'Description Proc Input'.Text,
                                'Scope Review':'Scope Review Proc Dropdown'.Selected.Value,
                                Model:Model.'Operating Model',
                                'Status Reason':'Status Reason (Processes)'.Active,
                                'Client Specific':'Client Specific (Processes)'.No,
                                Sequence:Value(txtProcessSequence.Text)
                            }
                        ),
                        Patch(
                            Processes,
                            Defaults(Processes),
                            {
                                'Process Name':'New Process Name Input'.Text,
                                'Process Group':ddProcessGroupSelection.Selected,
                                Description:'Description Proc Input'.Text,
                                'Data Flow URL':"<a href='" & 'Data Flow Diagram URL Input'.Text & "'>URL</a>",
                                'Scope Review':'Scope Review Proc Dropdown'.Selected.Value,
                                Model:Model.'Operating Model',
                                'Status Reason':'Status Reason (Processes)'.Active,
                                'Client Specific':'Client Specific (Processes)'.No,
                                Sequence:Value(txtProcessSequence.Text)
                            }
                        )
                    ),
                    If(IsBlank('Data Flow Diagram URL Input'.Text),
                        Patch(
                            Processes,
                            Defaults(Processes),
                            {
                                'Process Name':'New Process Name Input'.Text,
                                'Process Group':ddProcessGroupSelection.Selected,
                                Description:'Description Proc Input'.Text,
                                'Scope Review':'Scope Review Proc Dropdown'.Selected.Value,
                                Model:Model.'Operating Model',
                                'Status Reason':'Status Reason (Processes)'.Active,
                                'Client Specific':'Client Specific (Processes)'.Yes,
                                Sequence:Value(txtProcessSequence.Text)
                            }
                        ),
                        Patch(
                            Processes,
                            Defaults(Processes),
                            {
                                'Process Name':'New Process Name Input'.Text,
                                'Process Group':ddProcessGroupSelection.Selected,
                                Description:'Description Proc Input'.Text,
                                'Data Flow URL':"<a href='" & 'Data Flow Diagram URL Input'.Text & "'>URL</a>",
                                'Scope Review':'Scope Review Proc Dropdown'.Selected.Value,
                                Model:Model.'Operating Model',
                                'Status Reason':'Status Reason (Processes)'.Active,
                                'Client Specific':'Client Specific (Processes)'.Yes,
                                Sequence:Value(txtProcessSequence.Text)
                            }
                        )
                    )
                );
                UpdateContext({varOpenProcessCreate:false});
                Reset('New Process Name Input'); Reset( 'Description Proc Input');Reset(txtProcessSequence);Reset(ddProcessGroupSelection)
            Text: |-
                ="Create
                "
            Visible: =If(varOpenProcessCreate,true,false)
            X: =65
            Y: =580
            ZIndex: =5

        "'Operating Model Proc Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="Operating Model Filter"
            Visible: =false
            Width: =307
            X: =61
            Y: =556
            ZIndex: =6

        "'Scope Review Proc Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="Scope Review"
            Width: =213
            X: =65
            Y: =368
            ZIndex: =7

        "'Scope Review Proc Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Default: ="In Review"
            Height: =35
            Items: =Choices('Scope Review')
            Width: =185
            X: =65
            Y: =408
            ZIndex: =8

        "'Capability Proc Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="* Capability Filter"
            Width: =307
            X: =65
            Y: =187
            ZIndex: =9

        "'Operating Model Proc Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Height: =35
            Items: |-
                =//Filter('Operating Models', 'Operating Model Name' = 'Operating Model Gallery'.Selected.'Operating Model Name')
                colOperatingModelFilter
            Visible: =false
            Width: =293
            X: =732
            Y: =625
            ZIndex: =10

        "'Capability Proc Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Default: =glyProcessGroup.Selected.Capability.'Capability Name'
            Height: =35
            Items: |-
                =Sort(
                    Sort(
                        Filter(
                            Capabilities,
                            'Operating Model'.'Operating Model' = glyOperatingModels.Selected.'Operating Model' && Status = 'Status (Capabilities)'.Active
                        ),
                        Sequence
                    ),
                    'Capability Name'
                )
                //Sort(colCreateWindowCapacityFilter,'Capability Name')
            OnChange: |-
                =ClearCollect(
                    colCreateWindowPGFilter,
                    Filter(
                        'Process Groups',
                        Capability.Capability = 'Capability Proc Dropdown'.Selected.Capability && Status = 'Status (Process Groups)'.Active
                    )
                )
            OnSelect: =ClearCollect(colCreateWindowCapacityFilter,Filter(Capabilities, 'Operating Model'.'Operating Model' = glyOperatingModels.Selected.'Operating Model' && Status = 'Status (Capabilities)'.Active))
            Width: =432
            X: =63
            Y: =222
            ZIndex: =11

        "'Process Group Proc Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="* Process Group"
            Width: =307
            X: =65
            Y: =275
            ZIndex: =12

        "'Description Proc Input' As text":
            Clear: =true
            Default: =""
            Height: =311
            HintText: ="One or two sentences describing the purpose of the process"
            Mode: =TextMode.MultiLine
            OnSelect: |-
                =UpdateContext({varPGCreated:false})
            Tooltip: ="One or two sentences describing the purpose of the process"
            Width: =555
            X: =549
            Y: =133
            ZIndex: =13

        "'Description Proc Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="* Description"
            Width: =307
            X: =535
            Y: =93
            ZIndex: =14

        "'Data Flow Diagram URL Input' As text":
            Default: =""
            Height: =35
            HintText: =""
            OnSelect: |-
                =UpdateContext({varProcCreated:false})
            Width: =555
            X: =549
            Y: =497
            ZIndex: =16

        "'Data Flow Diagram URL Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="Data Flow Diagram URL"
            Width: =307
            X: =549
            Y: =457
            ZIndex: =17

        "'Reset Operating Model Cap Button_3' As button":
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: |-
                =//ClearCollect(colOperatingModelFilter,Filter('Operating Models','Operating Model Name', Status = 'Status (Operating Models)'.Active))
                ClearCollect(colOperatingModelFilter,glyOperatingModels.Selected)
            Text: |-
                ="Reset
                "
            Visible: =false
            Width: =115
            X: =368
            Y: =620
            ZIndex: =18

        lblDataDiagramInstructions As label:
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Height: =64
            OnSelect: |-
                =Launch("https://lucid.app/documents#/documents?folder_id=335606626")
            Text: ="The Data Flow Diagram does not yet exist. Please click here to create a new Data Flow in the Team Repo.  When your diagram is complete, place the hyperlink to it in the Data Flow Diagram URL"
            Visible: =If(IsBlank('Data Flow Diagram URL Input'.Text) && varOpenProcessCreate, true,false)
            Width: =581
            X: =549
            Y: =544
            ZIndex: =19

        ddProcessGroupSelection As dropdown:
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Default: =""
            Height: =35
            Items: =Filter('Process Groups', Capability.Capability = 'Capability Proc Dropdown'.Selected.Capability && Status = 'Status (Process Groups)'.Active)
            OnSelect: |-
                =ClearCollect(
                    colCreateWindowPGFilter,
                    Filter(
                        'Process Groups',
                        Capability.Capability = 'Capability Proc Dropdown'.Selected.Capability && Status = 'Status (Process Groups)'.Active
                    )
                )
            Width: =456
            X: =63
            Y: =310
            ZIndex: =20

        txtProcessSequence As text:
            Default: =""
            Height: =35
            Width: =211
            X: =297
            Y: =409
            ZIndex: =21

        lblProcessSequence As label:
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="Sequence"
            Width: =213
            X: =296
            Y: =366
            ZIndex: =22

    "'Process Detail Container' As groupContainer.manualLayoutContainer":
        DropShadow: =DropShadow.Semibold
        Fill: =RGBA(255, 255, 255, 1)
        Height: =748
        Visible: =If(varOpenProcessDetail, true, false)
        Width: =1119
        X: =99
        ZIndex: =11

        "'Process Details Title' As label":
            Align: =Align.Center
            Color: |-
                =ColorValue("#FFFFFF")
            Fill: |-
                =ColorValue("#00467f")
            Font: =Font.Lato
            FontWeight: =FontWeight.Bold
            Height: =62
            Size: =20
            Text: =If(varEditProcess,"Edit Process Details","Process Details")
            Width: ='Process Detail Container'.Width
            ZIndex: =1

        "'Process Name Label' As label":
            FontWeight: =FontWeight.Semibold
            Size: =14
            Text: ="Process Name"
            Visible: =false
            Width: =307
            X: =56
            Y: =79
            ZIndex: =2

        icoExitProcess As icon.Cancel:
            Color: =RGBA(255, 255, 255, 1)
            Height: =54
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({varOpenProcessDetail:false});
                UpdateContext({varEditProcess:false});
                UpdateContext({varChangedCapability:false})
            Width: =54
            X: ='Process Detail Container'.Width - 60
            Y: =3
            ZIndex: =3

        frmEditProcess As form:
            DataSource: =Processes
            DefaultMode: =If(varEditProcess, FormMode.Edit,FormMode.View)
            Height: =601
            Item: ='Process Gallery Parent'.Selected
            NumberOfColumns: =2
            SnapToColumns: =false
            Width: =1038
            X: =21
            Y: =67
            ZIndex: =4

            Sequence_DataCard5 As typedDataCard.numberEditCard:
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_sequence"
                Default: =ThisItem.Sequence
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Processes],DataSourceInfo.DisplayName,"neu_sequence")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =false
                Update: =Value(dcProcessSequence.Text)
                Width: =519
                X: =1
                Y: =0
                ZIndex: =1

                DataCardKey61 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =16
                    Y: =10
                    ZIndex: =1

                dcProcessSequence As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    Format: =TextFormat.Number
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =398
                    X: =16
                    Y: =44
                    ZIndex: =2

                ErrorMessage62 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcProcessSequence.Y + dcProcessSequence.Height
                    ZIndex: =3

                StarVisible57 As label:
                    Align: =Align.Center
                    Height: =DataCardKey61.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey61.Y
                    ZIndex: =4

            "'Status Reason_DataCard3' As typedDataCard.comboBoxOptionSetSingleEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="statuscode"
                Default: =ThisItem.'Status Reason'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Processes],DataSourceInfo.DisplayName,"statuscode")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =158
                Required: =true
                Update: =dcProcEditStatusReason.Selected.Value
                Visible: =false
                Width: =430
                X: =1
                Y: =1
                ZIndex: =1

                dcProcEditStatusReason As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =[Parent.Default]
                    DisplayFields: =["Value"]
                    DisplayMode: =Parent.DisplayMode
                    IsSearchable: =false
                    Items: =Choices('Status Reason (Processes)')
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["Value"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =173
                    X: =212
                    Y: =52
                    ZIndex: =2

                ErrorMessage33 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcProcEditStatusReason.Y + dcProcEditStatusReason.Height
                    ZIndex: =3

            "'Process Group_DataCard2' As typedDataCard.comboBoxEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_ProcessGroupID"
                Default: =ThisItem.'Process Group'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Processes],DataSourceInfo.DisplayName,"neu_ProcessGroupID")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =99
                Required: =false
                Update: =dcProcEditProcessGroup.Selected
                Width: =519
                WidthFit: =false
                X: =0
                Y: =2
                ZIndex: =1

                DataCardKey37 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =13
                    Y: =10
                    ZIndex: =1

                dcProcEditProcessGroup As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =Parent.Default
                    DisplayFields: =["neu_processgroupname"]
                    IsSearchable: =false
                    Items: |-
                        =colCreateWindowPGFilter
                        //Filter('Process Groups',Capability.Capability = dpCapabilityFilter.Selected.Capability)
                    OnChange: |-
                        =UpdateContext({varChangedCapability:false})
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["neu_processgroupname"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =385
                    X: =13
                    Y: =DataCardKey37.Y + DataCardKey37.Height + 5
                    ZIndex: =2

                ErrorMessage32 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcProcEditProcessGroup.Y + dcProcEditProcessGroup.Height
                    ZIndex: =3

                StarVisible26 As label:
                    Align: =Align.Center
                    Height: =DataCardKey37.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey37.Y
                    ZIndex: =4

            "'Data Flow URL_DataCard1' As typedDataCard.urlEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_dataflowurl"
                Default: =ThisItem.'Data Flow URL'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Processes],DataSourceInfo.DisplayName,"neu_dataflowurl")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =102
                Required: =false
                Update: =dcProcEditDataFlow.Text
                Width: =800
                X: =0
                Y: =3
                ZIndex: =1

                DataCardKey36 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =17
                    Y: =10
                    ZIndex: =1

                dcProcEditDataFlow As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    BorderThickness: =1
                    Color: =RGBA(9, 33, 98, 1)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    Height: =37
                    OnSelect: =If(varEditProcess,false,Launch(dcProcEditDataFlow.Text))
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Underline: =true
                    Width: =782
                    X: =17
                    Y: =48
                    ZIndex: =2

                ErrorMessage31 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcProcEditDataFlow.Y + dcProcEditDataFlow.Height
                    ZIndex: =3

                StarVisible25 As label:
                    Align: =Align.Center
                    Height: =DataCardKey36.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey36.Y
                    ZIndex: =4

            Process_DataCard1 As typedDataCard.textualViewCard:
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_processid"
                Default: =ThisItem.Process
                DisplayMode: =DisplayMode.View
                DisplayName: =DataSourceInfo([@Processes],DataSourceInfo.DisplayName,"neu_processid")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =106
                Required: =false
                Visible: =false
                Width: =519
                X: =1
                Y: =3
                ZIndex: =1

                DataCardKey13 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Visible: =false
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcProcessID As label:
                    AutoHeight: =true
                    DisplayMode: =Parent.DisplayMode
                    Height: =27
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Default
                    Visible: =false
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey13.Y + DataCardKey13.Height + 5
                    ZIndex: =2

            "'Process Name_DataCard1' As typedDataCard.textualEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_processname"
                Default: =ThisItem.'Process Name'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Processes],DataSourceInfo.DisplayName,"neu_processname")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                MaxLength: =DataSourceInfo([@Processes], DataSourceInfo.MaxLength, "neu_processname")
                Required: =true
                Update: =dcProcEditProcessName.Text
                Width: =519
                X: =0
                Y: =0
                ZIndex: =18

                DataCardKey33 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =20
                    Y: =12
                    ZIndex: =1

                dcProcEditProcessName As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    MaxLength: =Parent.MaxLength
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 20
                    X: =20
                    Y: =46
                    ZIndex: =2

                ErrorMessage28 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcProcEditProcessName.Y + dcProcEditProcessName.Height
                    ZIndex: =3

                StarVisible22 As label:
                    Align: =Align.Center
                    Height: =DataCardKey33.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey33.Y
                    ZIndex: =4

                Label2 As label:
                    Color: =RGBA(0, 18, 107, 1)
                    Text: ="Capability Filter"
                    X: =632
                    ZIndex: =5

            Description_DataCard2 As typedDataCard.textualMultiLineEditCard:
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_description"
                Default: =ThisItem.Description
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Processes],DataSourceInfo.DisplayName,"neu_description")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =275
                Required: =false
                Update: =dcProcEditDescription.Text
                Width: =860
                X: =0
                Y: =1
                ZIndex: =18

                DataCardKey35 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =25
                    Y: =10
                    ZIndex: =1

                dcProcEditDescription As text:
                    BorderColor: =RGBA(39, 67, 125, 1)
                    BorderThickness: =1
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =211
                    Mode: =TextMode.MultiLine
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =590
                    X: =25
                    Y: =DataCardKey35.Y + DataCardKey35.Height + 5
                    ZIndex: =2

                ErrorMessage30 As label:
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcProcEditDescription.Y + dcProcEditDescription.Height
                    ZIndex: =3

                StarVisible24 As label:
                    Align: =Align.Center
                    Height: =DataCardKey35.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey35.Y
                    ZIndex: =4

            "'Scope Review_DataCard2' As typedDataCard.comboBoxOptionSetSingleEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_scopereview"
                Default: =ThisItem.'Scope Review'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@Processes],DataSourceInfo.DisplayName,"neu_scopereview")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =120
                Required: =true
                Update: =dcProcEditScopeReview.Selected.Value
                Width: =519
                X: =1
                Y: =2
                ZIndex: =18

                DataCardKey34 As label:
                    AutoHeight: =true
                    FontWeight: =FontWeight.Bold
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =17
                    Y: =10
                    ZIndex: =1

                dcProcEditScopeReview As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =[Parent.Default]
                    DisplayFields: =["Value"]
                    DisplayMode: =Parent.DisplayMode
                    IsSearchable: =false
                    Items: =Choices('Scope Review')
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["Value"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =17
                    Y: =DataCardKey34.Y + DataCardKey34.Height + 5
                    ZIndex: =2

                ErrorMessage29 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcProcEditScopeReview.Y + dcProcEditScopeReview.Height
                    ZIndex: =3

                StarVisible23 As label:
                    Align: =Align.Center
                    Height: =DataCardKey34.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey34.Y
                    ZIndex: =4

        btnSaveProcess As button:
            DisplayMode: =If(IsBlank(dcProcEditProcessName.Text), DisplayMode.Disabled, DisplayMode.Edit)
            Fill: =RGBA(39, 67, 125, 1)
            OnSelect: |-
                =If(
                    dcProcEditStatusReason.Selected.Value = 'Status Reason (Processes)'.Inactive,
                    //Update to Inactive State
                    Patch(
                        Processes,
                        'Process Gallery Parent'.Selected,
                        {
                            'Process Name': dcProcEditProcessName.Text,
                            'Scope Review': dcProcEditScopeReview.Selected.Value,
                            Status: 'Status (Processes)'.Inactive
                        }
                    ),
                    //Update to Active State
                    Patch(
                        Processes,
                        'Process Gallery Parent'.Selected,
                        {
                            'Process Name': dcProcEditProcessName.Text,
                            'Scope Review': dcProcEditScopeReview.Selected.Value,
                            'Status Reason': dcProcEditStatusReason.Selected.Value,
                            Description: dcProcEditDescription.Text,
                            'Process Group': dcProcEditProcessGroup.Selected,
                            'Data Flow URL': dcProcEditDataFlow.Text,
                            Sequence: Value(dcProcessSequence.Text)
                        }
                    )
                );
                UpdateContext({varEditProcess: false});
                UpdateContext({varOpenProcessDetail: false});
                UpdateContext({varChangedCapability: false})
            Text: ="Save Process"
            Visible: =If(varEditProcess,true,false)
            X: =867
            Y: =591
            ZIndex: =5

        btnDeleteProcess As button:
            Fill: =RGBA(39, 67, 125, 1)
            OnSelect: |-
                =UpdateContext({varDeleteProcess:true})
            Text: ="Delete Process"
            X: =871
            Y: =656
            ZIndex: =6

        btnModifyProcess As button:
            DisplayMode: =If(IsBlank(dcProcEditProcessName.Text), DisplayMode.Disabled, DisplayMode.Edit)
            Fill: =RGBA(39, 67, 125, 1)
            OnSelect: |-
                =UpdateContext({varEditProcess:true})
            Text: ="Modify Process"
            Visible: =If(varEditProcess = false && chkDraftModels.Value = true,true,false)
            X: =920
            Y: =591
            ZIndex: =7

        lblCapability As label:
            BorderColor: =RGBA(50, 86, 160, 1)
            Color: =RGBA(0, 18, 107, 1)
            FontWeight: =FontWeight.Bold
            Text: ="Capability Filter"
            Visible: =If(varEditProcess,true,false)
            X: =647
            Y: =335
            ZIndex: =8

        Rectangle10 As rectangle:
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Visible: =If(varEditProcess,false,true)
            Width: =460
            X: =40
            Y: =108
            ZIndex: =9

        Rectangle10_1 As rectangle:
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =206
            Visible: =If(varEditProcess,false,true)
            Width: =803
            X: =40
            Y: =203
            ZIndex: =10

        Rectangle10_2 As rectangle:
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Visible: =If(varEditProcess,false,true)
            Width: =131
            X: =549
            Y: =108
            ZIndex: =11

        Rectangle10_4 As rectangle:
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =48
            Visible: =If(varEditProcess,false,true)
            Width: =199
            X: =549
            Y: =475
            ZIndex: =12

        Rectangle10_5 As rectangle:
            BorderThickness: =1
            Fill: =RGBA(0, 0, 0, 0)
            Height: =48
            OnSelect: =Launch(dcProcEditDataFlow.Text)
            Visible: =If(varEditProcess,false,true)
            Width: =803
            X: =40
            Y: =591
            ZIndex: =13

        Label14 As label:
            Color: =RGBA(255, 0, 0, 1)
            Height: =32
            Size: =10
            Text: ="Verify Process Group after change of Capability"
            Visible: =If(varChangedCapability,true,false)
            Width: =313
            X: =73
            Y: =523
            ZIndex: =14

        lblLucidChartMessage As label:
            Align: =Align.Center
            Color: =RGBA(9, 33, 98, 1)
            Height: =57
            OnSelect: |-
                =Launch("https://lucid.app/folder/invitations/accept/inv_c662a896-59b3-43f3-919e-5312afdb3d18")
            Size: =10
            Text: ="Data Flow Diagrams are stored in a group LucidChart Folder.  If this process is missing a data flow and one should be added, click here to create it and then paste the URL back here. "
            Underline: =true
            Width: =708
            X: =40
            Y: =639
            ZIndex: =15

        cntDeleteProcess As groupContainer.manualLayoutContainer:
            BorderThickness: =1
            Fill: =RGBA(255, 255, 255, 1)
            Visible: =If(varDeleteProcess,true,false)
            X: =420
            Y: =408
            ZIndex: =16

            lblConfirmDelete As label:
                Height: =51
                Text: ="Are you sure you want to delete this process?"
                Width: =401
                X: =40
                Y: =40
                ZIndex: =1

            btnDeleteProcessConfirmed As button:
                Fill: =RGBA(39, 67, 125, 1)
                OnSelect: |
                    =Remove(Processes,'Process Gallery Parent'.Selected);
                    UpdateContext({varDeleteProcess:false});
                    UpdateContext({varOpenProcessDetail:false});
                    UpdateContext({varEditProcess:false})
                Text: ="DELETE"
                Visible: =If(varEditProcess = true,true,false)
                X: =68
                Y: =118
                ZIndex: =2

            btnDeleteProcessCancelled As button:
                Fill: =RGBA(39, 67, 125, 1)
                OnSelect: |
                    =UpdateContext({varDeleteProcess:false})
                Text: ="Cancel"
                Visible: =If(varEditProcess = true,true,false)
                X: =263
                Y: =118
                ZIndex: =3

    dpCapabilityFilter As dropdown:
        Default: =If(varCapLevel = "(Level 1)", glyCapabilityLevel1.Selected.'Capability Name', If(varCapLevel = "(Level 2)", glyCapabilityLevel2.Selected.'Capability Name',glyCapabilityLevel3.Selected.'Capability Name'))
        Items: |-
            =//colCreateWindowCapacityFilter
            Filter(Capabilities,'Operating Model'.'Operating Model' = glyOperatingModels.Selected.'Operating Model' && Status = 'Status (Capabilities)'.Active)
        OnChange: |
            =ClearCollect(colCreateWindowPGFilter,Filter('Process Groups', Capability.Capability = dpCapabilityFilter.Selected.Capability && Status = 'Status (Process Groups)'.Active));
            UpdateContext({varChangedCapability:true});
        OnSelect: =ClearCollect(colCreateWindowCapacityFilter,Filter(Capabilities, 'Operating Model'.'Operating Model' = glyOperatingModels.Selected.'Operating Model'))
        Visible: =If(varEditProcess,true,false)
        Width: =445
        X: =750
        Y: =386
        ZIndex: =12

    lblPGInactiveWarning As label:
        Color: =RGBA(255, 0, 0, 1)
        FontWeight: =FontWeight.Bold
        Height: =133
        Text: |-
            ="WARNING:  Setting a Process Group to Inactive will delete the Process Group and all related Processes.    If there are any User Stories linked, you will receive an error."
        Visible: =If(varOpenProcessGroupEdit && dcPGEditStatusReason.Selected.Value = 'Status Reason (Process Groups)'.Inactive,true,false)
        Width: =322
        X: =739
        Y: =507
        ZIndex: =13

    lblProcInactiveWarning As label:
        Align: =Align.Center
        Color: =RGBA(255, 0, 0, 1)
        FontWeight: =FontWeight.Bold
        Height: =52
        Text: |-
            ="WARNING:  Setting a Process to Inactive will delete the Process."
        Visible: =If(varEditProcess && dcProcEditStatusReason.Selected.Value = 'Status Reason (Processes)'.Inactive,true,false)
        Width: =419
        X: =670
        Y: =312
        ZIndex: =14

    lblCapInactiveWarning As label:
        Color: =RGBA(255, 0, 0, 1)
        FontWeight: =FontWeight.Bold
        Height: =169
        Text: |-
            ="WARNING:  Setting a Capability to Inactive will delete the Capability and all Processes Groups / Processes that are associated to it.   You wll receive an error if any User Stories are linked."
        Visible: =If((varOpenCapabilityCreate ||varEditCap || varEditL3Cap) && CapEditStatusReason.Selected.Value = 'Status Reason (Capabilities)'.Inactive,true,false)
        Width: =290
        X: =657
        Y: =489
        ZIndex: =15

    lblModelPropMessage As label:
        Align: =Align.Center
        Color: =RGBA(255, 0, 0, 1)
        Height: =148
        Text: ="Model Association has been started.   Please allow up to 2 minutes to fully propagate.  You will need to navigate back to the Home Page and then come back here to see the model"
        Visible: =If(varModelPropStarted,true,false)
        Width: =279
        X: =81
        Y: =393
        ZIndex: =16

    lblAssociateError As label:
        Align: =Align.Center
        Color: =RGBA(255, 0, 0, 1)
        Height: =73
        Text: ="Please select an Operating Model from the drop down control"
        Visible: =If(varAssociateError, true,false)
        Width: =275
        X: =81
        Y: =468
        ZIndex: =17

    chkDraftModels As checkbox:
        Color: =RGBA(255, 255, 255, 1)
        OnCheck: |
            =Clear(colSubCapabilities);
            Clear(colProcessGroups);
        OnUncheck: |+
            =Clear(colSubCapabilities);
            Clear(colProcessGroups);
            
        Size: =12
        Text: ="Show Draft Models"
        Visible: =If(Len(ClientSolutionIdentifier)>0, false,true)
        Width: =195
        X: =81
        Y: =15
        ZIndex: =18

