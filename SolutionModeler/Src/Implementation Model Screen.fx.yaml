"'Implementation Model Screen' As screen":
    Fill: |-
        =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
            RGBA(149, 149, 149, 1),
            RGBA(237, 237, 237, 1)
        )

    ImplmentationModels_Background As groupContainer.manualLayoutContainer:
        DropShadow: =DropShadow.Regular
        Fill: |-
            =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
            RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
        Height: =649
        Width: =1327
        X: =20
        Y: =92
        ZIndex: =1

        "glyImplementationModels As gallery.'BrowseLayout_Vertical_TwoTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Height: =504
            Items: =Filter('Implementation Models',Status = 'Status (Implementation Models)'.Active)
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplateFill: |-
                =If(ThisItem.'Implementation Model Name' = glyImplementationModels.Selected.'Implementation Model Name' && 
                        !(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow), 
                     RGBA(204, 208, 225, 1),
                    If (ThisItem.'Implementation Model Name' = glyImplementationModels.Selected.'Implementation Model Name' && 
                            (varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow),
                            RGBA(153, 160, 196, 1),
                            RGBA(0,0,0,0)
                    )
                )
            TemplatePadding: =0
            TemplateSize: =90
            Width: =234
            X: =41
            Y: =48
            ZIndex: =1

            Title4 As label:
                FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                Height: =Self.Size * 1.8
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =12
                Text: =ThisItem.'Implementation Model Name'
                VerticalAlign: =VerticalAlign.Top
                Width: =Parent.TemplateWidth - 86
                X: =16
                Y: =(Parent.TemplateHeight - (Self.Size * 1.8 + Subtitle2.Size * 1.8)) / 2
                ZIndex: =1

            Subtitle2 As label:
                FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                Height: =Self.Size * 1.8
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =8
                Text: =ThisItem.Platform.'Platform Name'
                VerticalAlign: =VerticalAlign.Top
                Width: =Title4.Width
                X: =Title4.X
                Y: =Title4.Y + Title4.Height
                ZIndex: =2

            Separator2 As rectangle:
                Height: =8
                OnSelect: =Select(Parent)
                Width: =Parent.TemplateWidth
                Y: =Parent.TemplateHeight - Self.Height
                ZIndex: =4

            Rectangle4 As rectangle:
                Height: =Parent.TemplateHeight - Separator2.Height
                OnSelect: =Select(Parent)
                Visible: =ThisItem.IsSelected
                Width: =4
                ZIndex: =5

        "'Task Gallery Parent' As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Height: =504
            Items: =Sort(Filter(Tasks,'Product Backlog'.'Product Backlog Item Name' = 'Product Backlog Item Gallery'.Selected.'Product Backlog Item Name'), Sequence)
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            OnSelect: |-
                =//Navigate('Task Detail Screen',ScreenTransition.Cover)
                UpdateContext({varOpenTaskDetailWindow:true});
                UpdateContext({varCreateOpenImplementationModel:false});
                UpdateContext({varCreateOpenImplementationPhase:false});
                UpdateContext({varCreateOpenImplementationStage:false});
                UpdateContext({varCreateOpenProductBacklogItem:false});
                UpdateContext({varCreateOpenTask:false});
            TemplateFill: |-
                =If(ThisItem.'Task Name' = 'Task Gallery Parent'.Selected.'Task Name' && 
                        !(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow), 
                     RGBA(204, 208, 225, 1),
                    If (ThisItem.'Task Name' = 'Task Gallery Parent'.Selected.'Task Name' && 
                            (varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow),
                            RGBA(153, 160, 196, 1),
                            RGBA(0,0,0,0)
                    )
                )
            TemplatePadding: =0
            TemplateSize: =55
            Width: =234
            X: =1055
            Y: =48
            ZIndex: =1

            Title11 As label:
                FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                Height: =55
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: =ThisItem.'Task Name'
                Width: =224
                X: =10
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =1

            Rectangle10 As rectangle:
                Height: =Parent.TemplateHeight 
                OnSelect: =Select(Parent)
                Visible: =ThisItem.IsSelected
                Width: =4
                ZIndex: =4

        "'Product Backlog Item Gallery' As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Height: =504
            Items: =Sort(Filter('Product Backlog Items','Implementation Stage'.'Implementation Stage Name' = 'Implementation Stage Gallery'.Selected.'Implementation Stage Name'), Sequence)
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplateFill: |-
                =If(ThisItem.'Product Backlog Item Name' = 'Product Backlog Item Gallery'.Selected.'Product Backlog Item Name' && 
                        !(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow), 
                     RGBA(204, 208, 225, 1),
                    If (ThisItem.'Product Backlog Item Name' = 'Product Backlog Item Gallery'.Selected.'Product Backlog Item Name' && 
                            (varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow),
                            RGBA(153, 160, 196, 1),
                            RGBA(0,0,0,0)
                    )
                )
            TemplatePadding: =0
            TemplateSize: =55
            Width: =234
            X: =801
            Y: =48
            ZIndex: =2

            Title9 As label:
                FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                Height: =55
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =10
                Text: =ThisItem.'Product Backlog Item Name'
                Width: =224
                X: =10
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =1

            Rectangle9 As rectangle:
                Height: =Parent.TemplateHeight 
                OnSelect: =Select(Parent)
                Visible: =ThisItem.IsSelected
                Width: =4
                ZIndex: =4

        "'Implementation Stage Gallery' As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Height: =504
            Items: =Sort(Filter('Implementation Stages','Implementation Phase'.'Implementation Phase Name' = glyImplementationPhase.Selected.'Implementation Phase Name'), Sequence)
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplateFill: |-
                =If(ThisItem.'Implementation Stage Name' = 'Implementation Stage Gallery'.Selected.'Implementation Stage Name' && 
                        !(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow), 
                     RGBA(204, 208, 225, 1),
                    If (ThisItem.'Implementation Stage Name' = 'Implementation Stage Gallery'.Selected.'Implementation Stage Name' && 
                            (varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow),
                            RGBA(153, 160, 196, 1),
                            RGBA(0,0,0,0)
                    )
                )
            TemplatePadding: =0
            TemplateSize: =55
            Width: =234
            X: =547
            Y: =48
            ZIndex: =3

            Title7 As label:
                FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                Height: =55
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =9
                Text: =ThisItem.'Implementation Stage Name'
                Width: =224
                X: =10
                Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                ZIndex: =1

            Rectangle8 As rectangle:
                Height: =Parent.TemplateHeight 
                OnSelect: =Select(Parent)
                Visible: =ThisItem.IsSelected
                Width: =4
                ZIndex: =4

        "glyImplementationPhase As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Height: =504
            Items: =Sort(Filter('Implementation Phases','Implementation Model'.'Implementation Model Name' = glyImplementationModels.Selected.'Implementation Model Name' && Status = 'Status (Implementation Phases)'.Active), Sequence)
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplateFill: |-
                =If(ThisItem.'Implementation Phase Name' = glyImplementationPhase.Selected.'Implementation Phase Name' && 
                        !(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow), 
                     RGBA(204, 208, 225, 1),
                    If (ThisItem.'Implementation Phase Name' = glyImplementationPhase.Selected.'Implementation Phase Name' && 
                            (varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow),
                            RGBA(153, 160, 196, 1),
                            RGBA(0,0,0,0)
                    )
                )
            TemplatePadding: =0
            TemplateSize: =55
            Width: =234
            X: =295
            Y: =48
            ZIndex: =4

            Title1 As label:
                FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                Height: =55
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =9
                Text: =ThisItem.'Implementation Phase Name'
                Width: =224
                X: =10
                ZIndex: =1

            Rectangle5 As rectangle:
                Height: =Parent.TemplateHeight 
                OnSelect: =Select(Parent)
                Visible: =ThisItem.IsSelected
                Width: =4
                ZIndex: =4

            icoEditIP As icon.Edit:
                Color: =RGBA(128, 128, 128, 1)
                Height: =26
                Icon: =Icon.Edit
                OnSelect: |-
                    =UpdateContext({varEditOpenImplementationPhase:true})
                Width: =28
                X: =190
                Y: =14
                ZIndex: =5

        "'Implementation Model Label' As label":
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            FontWeight: =FontWeight.Bold
            Size: =14
            Text: |-
                ="Implementation Model
                "
            Width: =234
            X: =41
            Y: =8
            ZIndex: =6

        "'Implementation Phase Label' As label":
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            FontWeight: =FontWeight.Bold
            Size: =14
            Text: ="Implementation Phase"
            Width: =234
            X: =295
            Y: =8
            ZIndex: =7

        "'Implementation Stage Label' As label":
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            FontWeight: =FontWeight.Bold
            Size: =14
            Text: ="Implementation Stage"
            Width: =234
            X: =547
            Y: =8
            ZIndex: =8

        "'Product Backlog Item Label' As label":
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            FontWeight: =FontWeight.Bold
            Size: =14
            Text: ="Product Backlog Item"
            Width: =234
            X: =803
            Y: =8
            ZIndex: =9

        "'Task Label Parent' As label":
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            FontWeight: =FontWeight.Bold
            Size: =14
            Text: ="Task"
            Width: =234
            X: =1055
            Y: =8
            ZIndex: =10

        "'Creatte Implementation Model Button' As button":
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            Height: =57
            HoverFill: =ColorFade(RGBA(26, 76, 145, 1), -30%)
            OnSelect: |-
                =UpdateContext({varCreateOpenImplementationModel:true});
                UpdateContext({varCreateOpenImplementationPhase:false});
                UpdateContext({varCreateOpenImplementationStage:false});
                UpdateContext({varCreateOpenProductBacklogItem:false});
                UpdateContext({varCreateOpenTask:false});
                UpdateContext({varOpenTaskDetailWindow:false});
                Reset(txtImplementationModelName);
                Reset(txtImplementationPhaseName); Reset(txtSequenceIpInput);
                Reset(txtImplementationStageName); Reset('Sequence IS Input');
                Reset(txtProductBacklogName); Reset('Sequence PBI Input');
                Reset(txtTaskName); Reset('Sequence Task Input');Reset('New Task Description Input'); 
            Size: =12
            Text: ="Create Implementation Model"
            Width: =234
            X: =41
            Y: =565
            ZIndex: =11

        "'Create Implementation Phase Button' As button":
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            Height: =57
            HoverFill: =ColorFade(RGBA(26, 76, 145, 1), -30%)
            OnSelect: |-
                =UpdateContext({varCreateOpenImplementationModel:false});
                UpdateContext({varCreateOpenImplementationPhase:true});
                UpdateContext({varCreateOpenImplementationStage:false});
                UpdateContext({varCreateOpenProductBacklogItem:false});
                UpdateContext({varCreateOpenTask:false});
                UpdateContext({varOpenTaskDetailWindow:false});
                Reset(txtImplementationModelName);
                Reset(txtImplementationPhaseName); Reset(txtSequenceIpInput);
                Reset(txtImplementationStageName); Reset('Sequence IS Input');
                Reset(txtProductBacklogName); Reset('Sequence PBI Input');
                Reset(txtTaskName); Reset('Sequence Task Input');Reset('New Task Description Input'); 
            Size: =12
            Text: |-
                ="Create Implementation Phase
                "
            Width: =234
            X: =295
            Y: =565
            ZIndex: =12

        "'Create Implementation Stage Button' As button":
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            Height: =57
            HoverFill: =ColorFade(RGBA(26, 76, 145, 1), -30%)
            OnSelect: |-
                =UpdateContext({varCreateOpenImplementationModel:false});
                UpdateContext({varCreateOpenImplementationPhase:false});
                UpdateContext({varCreateOpenImplementationStage:true});
                UpdateContext({varCreateOpenProductBacklogItem:false});
                UpdateContext({varCreateOpenTask:false});
                UpdateContext({varOpenTaskDetailWindow:false});
                Reset(txtImplementationModelName);
                Reset(txtImplementationPhaseName); Reset(txtSequenceIpInput);
                Reset(txtImplementationStageName); Reset('Sequence IS Input');
                Reset(txtProductBacklogName); Reset('Sequence PBI Input');
                Reset(txtTaskName); Reset('Sequence Task Input');Reset('New Task Description Input'); 
            Size: =12
            Text: |-
                ="Create Implementation Stage
                "
            Width: =234
            X: =548
            Y: =565
            ZIndex: =13

        "'Create Product Backlog Item Button' As button":
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            Height: =57
            HoverFill: =ColorFade(RGBA(26, 76, 145, 1), -30%)
            OnSelect: |-
                =UpdateContext({varCreateOpenImplementationModel:false});
                UpdateContext({varCreateOpenImplementationPhase:false});
                UpdateContext({varCreateOpenImplementationStage:false});
                UpdateContext({varCreateOpenProductBacklogItem:true});
                UpdateContext({varCreateOpenTask:false});
                UpdateContext({varOpenTaskDetailWindow:false});
                Reset(txtImplementationModelName);
                Reset(txtImplementationPhaseName); Reset(txtSequenceIpInput);
                Reset(txtImplementationStageName); Reset('Sequence IS Input');
                Reset(txtProductBacklogName); Reset('Sequence PBI Input');
                Reset(txtTaskName); Reset('Sequence Task Input');Reset('New Task Description Input'); 
            Size: =12
            Text: |-
                ="Create Product
                Backlog Item
                "
            Width: =234
            X: =801
            Y: =565
            ZIndex: =14

        "'Create Task Button' As button":
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            Height: =57
            HoverFill: =ColorFade(RGBA(26, 76, 145, 1), -30%)
            OnSelect: |-
                =UpdateContext({varCreateOpenImplementationModel:false});
                UpdateContext({varCreateOpenImplementationPhase:false});
                UpdateContext({varCreateOpenImplementationStage:false});
                UpdateContext({varCreateOpenProductBacklogItem:false});
                UpdateContext({varCreateOpenTask:true});
                UpdateContext({varOpenTaskDetailWindow:false});
                Reset(txtImplementationModelName);
                Reset(txtImplementationPhaseName); Reset(txtSequenceIpInput);
                Reset(txtImplementationStageName); Reset('Sequence IS Input');
                Reset(txtProductBacklogName); Reset('Sequence PBI Input');
                Reset(txtTaskName); Reset('Sequence Task Input');Reset('New Task Description Input'); 
            Size: =12
            Text: |-
                ="Create Task
                "
            Width: =234
            X: =1055
            Y: =565
            ZIndex: =15

        icoEditIM As icon.Edit:
            Color: =RGBA(128, 128, 128, 1)
            Height: =26
            Icon: =Icon.Edit
            OnSelect: |-
                =UpdateContext({varEditOpenImplementationModel:true})
            Width: =28
            X: =232
            Y: =68
            ZIndex: =16

    "'Implementation Models Title' As label":
        Align: =Align.Center
        Color: |-
            =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
            RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
        Fill: |-
            =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                ColorFade(RGBA(26, 76, 145, 1), -30%),
                RGBA(26, 76, 145, 1)
            )
        Font: =Font.'Lato Light'
        FontWeight: =FontWeight.Semibold
        Height: =76
        Size: =26
        Text: ="Implementation Models"
        Width: =1366
        ZIndex: =2

    "'Back Button_2' As icon.ChevronLeft":
        Color: |-
            =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
            RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
        Height: =45
        Icon: =Icon.ChevronLeft
        OnSelect: |-
            =//Navigate('Main Screen',ScreenTransition.UnCoverRight)
            Back(ScreenTransition.UnCoverRight);
            Navigate(HomePage,ScreenTransition.UnCoverRight);
            UpdateContext({varCreateOpenImplementationModel:false});
            UpdateContext({varCreateOpenImplementationPhase:false});
            UpdateContext({varCreateOpenImplementationStage:false});
            UpdateContext({varCreateOpenProductBacklogItem:false});
            UpdateContext({varCreateOpenTask:false});
            UpdateContext({varOpenTaskDetailWindow:false});
        Width: =45
        X: =18
        Y: =15
        ZIndex: =8

    "'Task Details Container' As groupContainer.manualLayoutContainer":
        DropShadow: =DropShadow.Semibold
        Fill: =RGBA(255, 255, 255, 1)
        Height: =697
        Visible: =If(varOpenTaskDetailWindow, true, false)
        Width: =991
        X: =188
        Y: =36
        ZIndex: =19

        "'Task Details Title' As label":
            Align: =Align.Center
            Color: =RGBA(255,255,255,1)
            Fill: |-
                =ColorValue("#00467f")
            FontWeight: =FontWeight.Bold
            Height: =62
            Size: =20
            Text: ="Task Details"
            Width: ='Task Details Container'.Width
            ZIndex: =1

        "'Exit Task Details X Icon' As icon.Cancel":
            Color: =RGBA(255, 255, 255, 1)
            Height: =56
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({varOpenTaskDetailWindow:false})
            Width: =56
            X: ='Task Details Container'.Width - 60
            Y: =3
            ZIndex: =2

        "'Task Name Gallery' As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Height: =35
            Items: =Filter(Tasks, 'Task Name' = 'Task Gallery Parent'.Selected.'Task Name')
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplatePadding: =0
            TemplateSize: =35
            Width: =490
            X: =93
            Y: =144
            ZIndex: =3

            Title6 As label:
                Height: =35
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =12
                Text: =ThisItem.'Task Name'
                Width: ='Task Name Gallery'.Width - 15
                X: =10
                ZIndex: =1

        "'Task Name Detail Label' As label":
            FontWeight: =FontWeight.Bold
            Text: ="Task Name"
            X: =93
            Y: =104
            ZIndex: =4

        "'Task Description Gallery' As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Height: =216
            Items: =Filter(Tasks, 'Task Name' = 'Task Gallery Parent'.Selected.'Task Name')
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplatePadding: =0
            TemplateSize: =216
            Width: =799
            X: =93
            Y: =227
            ZIndex: =5

            Title6_1 As label:
                Height: =204
                OnSelect: =Select(Parent)
                Overflow: =Overflow.Scroll
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =12
                Text: =ThisItem.Description
                VerticalAlign: =VerticalAlign.Top
                Width: =787
                X: =12
                Y: =12
                ZIndex: =1

        "'Task Description Label' As label":
            FontWeight: =FontWeight.Bold
            Text: ="Description"
            X: =93
            Y: =187
            ZIndex: =6

        "'Task Sequence Gallery' As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Height: =35
            Items: =Filter(Tasks, 'Task Name' = 'Task Gallery Parent'.Selected.'Task Name')
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplatePadding: =0
            TemplateSize: =35
            Width: =178
            X: =93
            Y: =494
            ZIndex: =7

            Title6_2 As label:
                Height: =41
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =12
                Text: =Value(ThisItem.Sequence)
                Width: =165
                X: =12
                ZIndex: =1

        "'Task Sequence Label' As label":
            FontWeight: =FontWeight.Bold
            Text: ="Sequence"
            X: =93
            Y: =454
            ZIndex: =8

        "'Task Sequence Gallery_1' As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Height: =35
            Items: =Filter(Tasks, 'Task Name' = 'Task Gallery Parent'.Selected.'Task Name')
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplatePadding: =0
            TemplateSize: =35
            Width: =178
            X: =500
            Y: =494
            ZIndex: =9

            Title6_3 As label:
                Height: =41
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =12
                Text: =ThisItem.Determination
                Width: =165
                X: =12
                ZIndex: =1

        "'Task Sequence Label_1' As label":
            FontWeight: =FontWeight.Bold
            Text: ="Determination"
            X: =500
            Y: =454
            ZIndex: =10

        "'Task Sequence Gallery_2' As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
            BorderThickness: =1
            DelayItemLoading: =true
            Height: =35
            Items: =Filter(Tasks, 'Task Name' = 'Task Gallery Parent'.Selected.'Task Name')
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplatePadding: =0
            TemplateSize: =35
            Width: =178
            X: =93
            Y: =577
            ZIndex: =11

            Title6_4 As label:
                Height: =35
                OnSelect: =Select(Parent)
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Size: =12
                Text: =ThisItem.'Status Reason'
                Width: =165
                X: =12
                ZIndex: =1

        "'Task Sequence Label_2' As label":
            FontWeight: =FontWeight.Bold
            Text: ="Status Reason"
            X: =93
            Y: =537
            ZIndex: =12

    "'Create Implmentation Model Container' As groupContainer.manualLayoutContainer":
        DropShadow: =DropShadow.Semibold
        Fill: =RGBA(255, 255, 255, 1)
        Height: =449
        Visible: =If(varCreateOpenImplementationModel || varEditOpenImplementationModel,true,false)
        Width: =892
        X: =237
        Y: =160
        ZIndex: =20

        "'Create New IM Title' As label":
            Align: =Align.Center
            Color: =RGBA(255,255,255,1)
            Fill: |-
                =ColorValue("#00467f")
            FontWeight: =FontWeight.Bold
            Height: =62
            Size: =20
            Text: =If(varEditOpenImplementationModel, "Edit Implementation Model","Create Implementation Model")
            Width: ='Create Implmentation Model Container'.Width
            ZIndex: =1

        "'Exit Implementation Model Create Icon' As icon.Cancel":
            Color: =RGBA(255, 255, 255, 1)
            Height: =54
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({varCreateOpenImplementationModel:false});
                UpdateContext({varEditOpenImplementationModel:false});
                UpdateContext({varIMCreated:false});
                Reset(txtImplementationModelName)
            Width: =54
            X: ='Create Implmentation Model Container'.Width - 60
            Y: =3
            ZIndex: =2

        "'New Implementation Model Name Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Implementation Model Name"
            Visible: =If(varCreateOpenImplementationModel,true,false)
            Width: =306
            X: =72
            Y: =110
            ZIndex: =3

        txtImplementationModelName As text:
            Default: =""
            Height: =35
            OnSelect: |-
                =UpdateContext({varIMCreated:false})
            Size: =12
            Visible: =If(varCreateOpenImplementationModel,true,false)
            Width: =386
            X: =78
            Y: =150
            ZIndex: =4

        "'Create Button' As button":
            Fill: |-
                =ColorValue("#00467f")
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: |-
                =Patch(
                    'Implementation Models',
                    Defaults('Implementation Models'),
                    {
                        'Implementation Model Name':txtImplementationModelName.Text,
                        Platform:'Platform IM Dropdown'.Selected,
                        'Status Reason':'Status Reason (Implementation Models)'.Draft
                    }
                );
                
                UpdateContext({varIMCreated:true});
                Reset(txtImplementationModelName)
            Text: ="Create"
            Visible: =If(varCreateOpenImplementationModel && Len(txtImplementationModelName.Text)>0,true,false)
            Width: =180
            X: =356
            Y: =379
            ZIndex: =5

        "'Platform IM Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Platform"
            Visible: =If(varCreateOpenImplementationModel,true,false)
            X: =78
            Y: =191
            ZIndex: =6

        "'Platform IM Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Height: =35
            Items: =Sort(Platforms, 'Platform Name')
            Size: =12
            Visible: =If(varCreateOpenImplementationModel,true,false)
            Width: =300
            X: =78
            Y: =231
            ZIndex: =7

        "'Implmentation Model created message' As label":
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Text: ="Implementation Model was successfully created!"
            Visible: =If(varIMCreated,true,false)
            Width: =451
            X: =221
            Y: =326
            ZIndex: =10

        "'Creatte Implementation Model Button_1' As button":
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            Height: =44
            HoverFill: =ColorFade(RGBA(26, 76, 145, 1), -30%)
            OnSelect: |-
                =If(dcIMStatusReason.Selected.Value = 'Status Reason (Implementation Models)'.Inactive,
                Patch(
                    'Implementation Models',
                    glyImplementationModels.Selected,
                    {
                        //'Implementation Model Name':dcImplementationModelName
                        Status: 'Status (Implementation Models)'.Inactive
                        //'Status Reason':'Status Reason (Implementation Models)'.Inactive,
                        //Platform:dcIMPlatform.Selected
                    }
                ),
                    SubmitForm(frmEditImplementationModel)
                );
                UpdateContext({varEditOpenImplementationModel:false});
            Size: =12
            Text: ="Update"
            Visible: =If(varEditOpenImplementationModel && Len(dcImplementationModelName.Text)>0 ,true,false)
            Width: =194
            X: =72
            Y: =397
            ZIndex: =11

        Label12 As label:
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Height: =125
            Text: ="Setting an Implemenation Model to Inactive will render the Model and all associated records inaccessible"
            Visible: =If(varEditOpenImplementationModel && dcIMStatusReason.Selected.Value = 'Status Reason (Implementation Models)'.Inactive,true,false)
            Width: =236
            X: =650
            Y: =294
            ZIndex: =12

    "'Create Implmentation Phase Container' As groupContainer.manualLayoutContainer":
        DropShadow: =DropShadow.Semibold
        Fill: =RGBA(255, 255, 255, 1)
        Height: =527
        Visible: =If(varCreateOpenImplementationPhase || varEditOpenImplementationPhase,true,false)
        Width: =892
        X: =237
        Y: =121
        ZIndex: =21

        "'Create New IP Title' As label":
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Fill: |-
                =ColorValue("#00467f")
            FontWeight: =FontWeight.Bold
            Height: =62
            Size: =20
            Text: =If(varEditOpenImplementationPhase, "Edit Implementation Phase","Create Implementation Phase")
            Width: ='Create Implmentation Phase Container'.Width
            ZIndex: =1

        "'Exit Implementation Phase Create Icon' As icon.Cancel":
            Color: =RGBA(255, 255, 255, 1)
            Height: =54
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({varCreateOpenImplementationPhase:false});
                UpdateContext({varEditOpenImplementationPhase:false});
                UpdateContext({varIPCreated:false});
                Reset(txtImplementationPhaseName); Reset(txtSequenceIpInput);
            Width: =54
            X: ='Create Implmentation Phase Container'.Width - 60
            Y: =3
            ZIndex: =2

        "'New Implementation Phase Name Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Implementation Phase Name"
            Visible: =If(varCreateOpenImplementationPhase,true,false)
            Width: =306
            X: =64
            Y: =96
            ZIndex: =3

        txtImplementationPhaseName As text:
            Default: =""
            Height: =35
            OnSelect: |-
                =UpdateContext({varIPCreated:false})
            Size: =12
            Visible: =If(varCreateOpenImplementationPhase,true,false)
            Width: =413
            X: =64
            Y: =136
            ZIndex: =4

        "'Create IP Button' As button":
            Fill: |-
                =ColorValue("#00467f")
            Height: =48
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: |-
                =Patch(
                    'Implementation Phases',
                    Defaults('Implementation Phases'),
                    {
                        'Implementation Phase Name':txtImplementationPhaseName.Text,
                        'Implementation Model':'Implementation Model IP Dropdown'.Selected,
                        Sequence:Value(txtSequenceIpInput.Text),
                        'Status Reason':'Status Reason (Implementation Phases)'.Draft,
                        Model:Model.'Implementation Model'
                    }
                );
                
                UpdateContext({varIPCreated:true});
                Reset(txtImplementationPhaseName); Reset(txtSequenceIpInput);
            Text: ="Create"
            Visible: =If(varCreateOpenImplementationPhase && (Len(txtImplementationPhaseName.Text)>0 && Len(txtSequenceIpInput)>0) ,true,false)
            Width: =180
            X: =355
            Y: =453
            ZIndex: =5

        "'Implementation Model IP Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Implementation Model"
            Visible: =If(varCreateOpenImplementationPhase,true,false)
            Width: =258
            X: =64
            Y: =191
            ZIndex: =6

        "'Implementation Model IP Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            Height: =35
            Items: =Filter('Implementation Models', 'Implementation Model Name' = glyImplementationModels.Selected.'Implementation Model Name')
            Size: =12
            Visible: =If(varCreateOpenImplementationPhase,true,false)
            Width: =413
            X: =64
            Y: =231
            ZIndex: =7

        "'Implmentation Phase created message' As label":
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Text: ="Implementation Phase was successfully created!"
            Visible: =If(varIPCreated,true,false)
            Width: =451
            X: =220
            Y: =400
            ZIndex: =10

        "'Sequence IP Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Sequence"
            Visible: =If(varCreateOpenImplementationPhase,true,false)
            Width: =306
            X: =64
            Y: =289
            ZIndex: =11

        txtSequenceIpInput As text:
            Default: =""
            Format: =TextFormat.Number
            Height: =35
            Size: =12
            Visible: =If(varCreateOpenImplementationPhase,true,false)
            Width: =369
            X: =64
            Y: =329
            ZIndex: =12

        frmEditImplementationPhase As form:
            DataSource: ='Implementation Phases'
            Height: =419
            Item: =glyImplementationPhase.Selected
            NumberOfColumns: =1
            Visible: =If(varEditOpenImplementationPhase,true,false)
            Width: =511
            X: =40
            Y: =70
            ZIndex: =13

            "'Implementation Phase Name_DataCard1' As typedDataCard.textualEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_implementationphasename"
                Default: =ThisItem.'Implementation Phase Name'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Implementation Phases'],DataSourceInfo.DisplayName,"neu_implementationphasename")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                MaxLength: =DataSourceInfo([@'Implementation Phases'], DataSourceInfo.MaxLength, "neu_implementationphasename")
                Required: =true
                Update: =dcImplementationPhaseNameEdit.Text
                Width: =511
                X: =0
                Y: =0
                ZIndex: =27

                DataCardKey50 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcImplementationPhaseNameEdit As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    MaxLength: =Parent.MaxLength
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey50.Y + DataCardKey50.Height + 5
                    ZIndex: =2

                ErrorMessage45 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcImplementationPhaseNameEdit.Y + dcImplementationPhaseNameEdit.Height
                    ZIndex: =3

                StarVisible40 As label:
                    Align: =Align.Center
                    Height: =DataCardKey50.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey50.Y
                    ZIndex: =4

            Sequence_DataCard1 As typedDataCard.numberEditCard:
                BorderStyle: =BorderStyle.Solid
                DataField: ="neu_sequence"
                Default: =ThisItem.Sequence
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Implementation Phases'],DataSourceInfo.DisplayName,"neu_sequence")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =true
                Update: =Value(dcIPSequenceEdit.Text)
                Width: =511
                X: =0
                Y: =1
                ZIndex: =27

                DataCardKey51 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcIPSequenceEdit As text:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    Default: =Parent.Default
                    DelayOutput: =true
                    DisplayMode: =Parent.DisplayMode
                    Format: =TextFormat.Number
                    PaddingLeft: =5
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey51.Y + DataCardKey51.Height + 5
                    ZIndex: =2

                ErrorMessage46 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcIPSequenceEdit.Y + dcIPSequenceEdit.Height
                    ZIndex: =3

                StarVisible41 As label:
                    Align: =Align.Center
                    Height: =DataCardKey51.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey51.Y
                    ZIndex: =4

            "'Status Reason_DataCard6' As typedDataCard.comboBoxOptionSetSingleEditCard":
                BorderStyle: =BorderStyle.Solid
                DataField: ="statuscode"
                Default: =ThisItem.'Status Reason'
                DisplayMode: =Parent.DisplayMode
                DisplayName: =DataSourceInfo([@'Implementation Phases'],DataSourceInfo.DisplayName,"statuscode")
                Fill: =RGBA(0, 0, 0, 0)
                Height: =50
                Required: =true
                Update: =dcIPStatusReasonEdit.Selected.Value
                Width: =511
                X: =0
                Y: =2
                ZIndex: =27

                DataCardKey52 As label:
                    AutoHeight: =true
                    Height: =34
                    Text: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    Wrap: =false
                    X: =30
                    Y: =10
                    ZIndex: =1

                dcIPStatusReasonEdit As combobox:
                    BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                    DefaultSelectedItems: =[Parent.Default]
                    DisplayFields: =["Value"]
                    DisplayMode: =Parent.DisplayMode
                    IsSearchable: =false
                    Items: =Choices('Status Reason (Implementation Phases)')
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    SearchFields: =["Value"]
                    SearchItems: =[]
                    SelectMultiple: =false
                    Tooltip: =Parent.DisplayName
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =DataCardKey52.Y + DataCardKey52.Height + 5
                    ZIndex: =2

                ErrorMessage47 As label:
                    AutoHeight: =true
                    Height: =10
                    Live: =Live.Assertive
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Text: =Parent.Error
                    Visible: =Parent.DisplayMode=DisplayMode.Edit
                    Width: =Parent.Width - 60
                    X: =30
                    Y: =dcIPStatusReasonEdit.Y + dcIPStatusReasonEdit.Height
                    ZIndex: =3

                StarVisible42 As label:
                    Align: =Align.Center
                    Height: =DataCardKey52.Height
                    Text: ="*"
                    Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                    Width: =30
                    Wrap: =false
                    Y: =DataCardKey52.Y
                    ZIndex: =4

        btnUpdateImplementationPhase As button:
            Color: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                RGBA(202, 202, 202, 1), RGBA(255, 255, 255, 1))
            Fill: |-
                =If(varCreateOpenImplementationModel || varCreateOpenImplementationPhase || varCreateOpenImplementationStage || varCreateOpenProductBacklogItem || varCreateOpenTask || varOpenTaskDetailWindow, 
                    ColorFade(RGBA(26, 76, 145, 1), -30%),
                    RGBA(26, 76, 145, 1)
                )
            Height: =49
            HoverFill: =ColorFade(RGBA(26, 76, 145, 1), -30%)
            OnSelect: |-
                =If(dcIPStatusReasonEdit.Selected.Value = 'Status Reason (Implementation Phases)'.Inactive,
                Patch(
                    'Implementation Phases',
                    glyImplementationPhase.Selected,
                    {
                       
                        Status: 'Status (Implementation Phases)'.Inactive
                
                    }
                ),
                    SubmitForm(frmEditImplementationPhase)
                );
                UpdateContext({varEditOpenImplementationPhase:false});
            Size: =12
            Text: ="Update"
            Visible: =If(varEditOpenImplementationPhase && Len(dcImplementationPhaseNameEdit.Text)>0 && Len(dcIPSequenceEdit)>0, true,false)
            Width: =189
            X: =76
            Y: =440
            ZIndex: =14

        lblDeletionMesssage As label:
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Height: =158
            Text: ="Setting an Implementation Phase to Inactive will render it and all related records inacessible."
            Visible: =If(dcIPStatusReasonEdit.Selected.Value = 'Status Reason (Implementation Phases)'.Inactive,true,false)
            Width: =224
            X: =608
            Y: =256
            ZIndex: =15

    "'Create Implmentation Stage Container' As groupContainer.manualLayoutContainer":
        Fill: =RGBA(255, 255, 255, 1)
        Height: =552
        Visible: =If(varCreateOpenImplementationStage,true,false)
        Width: =892
        X: =237
        Y: =160
        ZIndex: =22

        "'Create New IS Title' As label":
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Fill: |-
                =ColorValue("#00467f")
            FontWeight: =FontWeight.Bold
            Height: =62
            Size: =20
            Text: ="Create New Implementation Stage"
            Width: ='Create Implmentation Stage Container'.Width
            ZIndex: =1

        "'Exit Implementation Stage Create Icon' As icon.Cancel":
            Color: =RGBA(255, 255, 255, 1)
            Height: =54
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({varCreateOpenImplementationStage:false});
                UpdateContext({varISCreated:false});
                Reset(txtImplementationStageName); Reset('Sequence IS Input');
            Width: =54
            X: ='Create Implmentation Stage Container'.Width - 60
            Y: =3
            ZIndex: =2

        "'New Implementation Stage Name Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="New Implementation Stage Name"
            Width: =306
            X: =64
            Y: =103
            ZIndex: =3

        txtImplementationStageName As text:
            Default: =""
            Height: =35
            OnSelect: |-
                =UpdateContext({varIPCreated:false})
            Size: =12
            Width: =413
            X: =64
            Y: =143
            ZIndex: =4

        "'Create IS Button' As button":
            Fill: |-
                =ColorValue("#00467f")
            Height: =48
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: |-
                =Patch(
                    'Implementation Stages',
                    Defaults('Implementation Stages'),
                    {
                        'Implementation Stage Name':txtImplementationStageName.Text,
                        'Implementation Phase':'Implementation Phase IS Dropdown'.Selected,
                        Sequence:Value('Sequence IS Input'.Text) * 1000,
                        'Status Reason':'Status Reason (Implementation Stages)'.Draft,
                        Model:Model.'Implementation Model'
                    }
                );
                
                UpdateContext({varISCreated:true});
                Reset(txtImplementationStageName); Reset('Sequence IS Input');
            Text: ="Create"
            Visible: =If(IsBlank(txtImplementationStageName.Text),false,true)
            Width: =180
            X: =356
            Y: =407
            ZIndex: =5

        "'Implementation Model IS Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Implementation Model"
            Visible: =false
            Width: =258
            X: =64
            Y: =198
            ZIndex: =6

        "'Implementation Model IS Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            Height: =35
            Items: =Filter('Implementation Models', 'Implementation Model Name' = glyImplementationModels.Selected.'Implementation Model Name')
            Size: =12
            Visible: =false
            Width: =413
            X: =64
            Y: =238
            ZIndex: =7

        "'Implmentation Stage created message' As label":
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Text: ="Implementation Stage was successfully created!"
            Visible: =If(varISCreated,true,false)
            Width: =451
            X: =221
            Y: =491
            ZIndex: =10

        "'Sequence IS Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: |-
                =//"Sequence" & " (Range within " & Value('Implementation Phase Gallery'.Selected.Sequence / 1000) & " to " & (Value('Implementation Phase Gallery'.Selected.Sequence / 1000) + 1) & ")"
                "Sequence"
            Width: =306
            X: =64
            Y: =297
            ZIndex: =11

        "'Sequence IS Input' As text":
            Default: =""
            Format: =TextFormat.Number
            Height: =35
            Size: =12
            Width: =260
            X: =64
            Y: =337
            ZIndex: =12

        "'Implementation Phase IS Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Implementation Phase"
            Width: =258
            X: =64
            Y: =198
            ZIndex: =13

        "'Implementation Phase IS Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            Height: =35
            Items: =Filter('Implementation Phases', 'Implementation Phase Name' = glyImplementationPhase.Selected.'Implementation Phase Name')
            Size: =12
            Width: =413
            X: =64
            Y: =238
            ZIndex: =14

    "'Create Product Backlog Item Container' As groupContainer.manualLayoutContainer":
        DropShadow: =DropShadow.Semibold
        Fill: =RGBA(255, 255, 255, 1)
        Height: =564
        Visible: =If(varCreateOpenProductBacklogItem,true,false)
        Width: =892
        X: =237
        Y: =160
        ZIndex: =23

        "'Create New PBI Title' As label":
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Fill: |-
                =ColorValue("#00467f")
            FontWeight: =FontWeight.Bold
            Height: =62
            Size: =20
            Text: ="Create New Product Backlog Item"
            Width: ='Create Product Backlog Item Container'.Width
            ZIndex: =1

        "'Exit Product Backlog Item Create Icon' As icon.Cancel":
            Color: =RGBA(255, 255, 255, 1)
            Height: =54
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({varCreateOpenProductBacklogItem:false});
                UpdateContext({varPBICreated:false});
                Reset(txtProductBacklogName); Reset('Sequence PBI Input');
            Width: =54
            X: ='Create Product Backlog Item Container'.Width - 60
            Y: =3
            ZIndex: =2

        "'New Product Backlog Item Name Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="New Product Backlog Item Name"
            Width: =306
            X: =64
            Y: =103
            ZIndex: =3

        txtProductBacklogName As text:
            Default: =""
            Height: =35
            OnSelect: |-
                =UpdateContext({varIPCreated:false})
            Size: =12
            Width: =413
            X: =64
            Y: =143
            ZIndex: =4

        "'Create PBI Button' As button":
            Fill: |-
                =ColorValue("#00467f")
            Height: =48
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -30%)
            OnSelect: |-
                =Patch(
                    'Product Backlog Items',
                    Defaults('Product Backlog Items'),
                    {
                        'Product Backlog Item Name':txtProductBacklogName.Text,
                        'Implementation Stage':'Implementation Stage PBI Dropdown'.Selected,
                        Sequence:Value('Sequence PBI Input'.Text) * 1000,
                        'Status Reason':'Status Reason (Product Backlog Items)'.Draft,
                        Model:Model.'Implementation Model'
                    }
                );
                
                UpdateContext({varPBICreated:true});
                Reset(txtProductBacklogName); Reset('Sequence PBI Input');
            Text: ="Create"
            Visible: =If(IsBlank(txtProductBacklogName.Text),false,true)
            Width: =180
            X: =356
            Y: =412
            ZIndex: =5

        "'Implementation Model PBI Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Implementation Model"
            Visible: =false
            Width: =258
            X: =394
            Y: =479
            ZIndex: =6

        "'Implementation Model PBI Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Height: =35
            Items: =Filter('Implementation Models', 'Implementation Model Name' = glyImplementationModels.Selected.'Implementation Model Name')
            Size: =12
            Visible: =false
            Width: =413
            X: =394
            Y: =519
            ZIndex: =7

        "'Product Backlog Item created message' As label":
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Text: ="Product Backlog Item was successfully created!"
            Visible: =If(varPBICreated,true,false)
            Width: =451
            X: =221
            Y: =554
            ZIndex: =10

        "'Sequence PBI Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: |-
                =//"Sequence" & " (Range within " & Value('Implementation Stage Gallery'.Selected.Sequence / 1000) & " to " & (Value('Implementation Stage Gallery'.Selected.Sequence / 1000) + 0.1) & ")"
                "Sequence"
            Width: =306
            X: =64
            Y: =304
            ZIndex: =11

        "'Sequence PBI Input' As text":
            Default: =""
            Format: =TextFormat.Number
            Height: =35
            Size: =12
            Width: =260
            X: =64
            Y: =344
            ZIndex: =12

        "'Implementation Phase PBI Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Implementation Phase"
            Visible: =false
            Width: =258
            X: =479
            Y: =420
            ZIndex: =13

        "'Implementation Phase PBI Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Height: =35
            Items: =Filter('Implementation Phases', 'Implementation Phase Name' = glyImplementationPhase.Selected.'Implementation Phase Name')
            Size: =12
            Visible: =false
            Width: =413
            X: =479
            Y: =460
            ZIndex: =14

        "'Implementation Stage PBI Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Implementation Stage"
            Width: =258
            X: =64
            Y: =201
            ZIndex: =15

        "'Implementation Stage PBI Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Height: =35
            Items: =Filter('Implementation Stages', 'Implementation Stage Name' = 'Implementation Stage Gallery'.Selected.'Implementation Stage Name')
            Size: =12
            Width: =413
            X: =64
            Y: =241
            ZIndex: =16

    "'Create Task Container' As groupContainer.manualLayoutContainer":
        DropShadow: =DropShadow.Semibold
        Fill: =RGBA(255, 255, 255, 1)
        Height: =603
        Visible: =If(varCreateOpenTask,true,false)
        Width: =1091
        X: =138
        Y: =109
        ZIndex: =24

        "'Create New Task Title' As label":
            Align: =Align.Center
            Color: =RGBA(255, 255, 255, 1)
            Fill: |-
                =ColorValue("#00467f")
            FontWeight: =FontWeight.Bold
            Height: =62
            Size: =20
            Text: ="Create New Task"
            Width: ='Create Task Container'.Width
            ZIndex: =1

        "'Exit Task Create Icon' As icon.Cancel":
            Color: =RGBA(255, 255, 255, 1)
            Height: =54
            Icon: =Icon.Cancel
            OnSelect: |-
                =UpdateContext({varCreateOpenTask:false});
                UpdateContext({varTaskCreated:false});
                Reset(txtTaskName); Reset('Sequence Task Input');Reset('New Task Description Input');
            Width: =54
            X: ='Create Task Container'.Width - 60
            Y: =3
            ZIndex: =2

        "'New Task Name Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="* New Task Name"
            Width: =306
            X: =64
            Y: =103
            ZIndex: =3

        txtTaskName As text:
            Default: =""
            Height: =35
            OnSelect: |-
                =UpdateContext({varIPCreated:false})
            Size: =12
            Width: =413
            X: =64
            Y: =143
            ZIndex: =4

        "'Create Task Button_1' As button":
            Fill: |-
                =ColorValue("#00467f")
            Height: =48
            HoverFill: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            OnSelect: |-
                =Patch(
                    Tasks,
                    Defaults(Tasks),
                    {
                        'Task Name':txtTaskName.Text,
                        'Product Backlog':'Product Backlog Task Dropdown'.Selected,
                       // Sequence:Value('Sequence Task Input'.Text) * 1000,
                            Sequence:Value('Sequence Task Input'.Text),
                        'Status Reason':'Status Reason (Tasks)'.Draft,
                        Determination:'Determination Task Dropdown'.Selected.Value,
                        Model:Model.'Implementation Model'
                    }
                );
                
                UpdateContext({varTaskCreated:true});
                Reset(txtTaskName); Reset('Sequence Task Input');Reset('New Task Description Input');
            Text: ="Create"
            Visible: =If(IsBlank(txtTaskName.Text),false,true)
            Width: =180
            X: =455
            Y: =520
            ZIndex: =5

        "'Task created message' As label":
            Align: =Align.Center
            Color: =RGBA(255, 0, 0, 1)
            Text: ="Task was successfully created!"
            Visible: =If(varTaskCreated,true,false)
            Width: =451
            X: =320
            Y: =608
            ZIndex: =6

        "'Sequence Task Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: |-
                =//"Sequence" & " (Range within " & Value('Product Backlog Item Gallery'.Selected.Sequence / 1000) & " to " & (Value('Product Backlog Item Gallery'.Selected.Sequence / 1000) + 0.1) & ")"
                "* Sequence"
            Width: =413
            X: =64
            Y: =302
            ZIndex: =11

        "'Sequence Task Input' As text":
            Default: =""
            Format: =TextFormat.Number
            Height: =35
            Size: =12
            Width: =194
            X: =64
            Y: =342
            ZIndex: =12

        "'New Task Description Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Description"
            Width: =306
            X: =558
            Y: =103
            ZIndex: =17

        "'New Task Description Input' As text":
            Clear: =true
            Default: =""
            Height: =306
            Mode: =TextMode.MultiLine
            OnSelect: |-
                =UpdateContext({varIPCreated:false})
            Size: =12
            Width: =413
            X: =558
            Y: =143
            ZIndex: =18

        "'Determination Task Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="Determination"
            X: =64
            Y: =405
            ZIndex: =19

        "'Determination Task Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Default: ="Draft"
            Height: =35
            Items: =Choices(Determination)
            Size: =12
            Width: =197
            X: =64
            Y: =445
            ZIndex: =20

        "'Product Backlog Task Label' As label":
            FontWeight: =FontWeight.Semibold
            Text: ="* Product Backlog"
            Width: =258
            X: =64
            Y: =202
            ZIndex: =21

        "'Product Backlog Task Dropdown' As dropdown":
            ChevronBackground: |-
                =ColorValue("#00467f")
            ChevronHoverBackground: |-
                =ColorFade(ColorValue("#00467f"), -20%)
            Height: =35
            Items: =Filter('Product Backlog Items', 'Product Backlog Item Name' = 'Product Backlog Item Gallery'.Selected.'Product Backlog Item Name')
            Size: =12
            Width: =413
            X: =64
            Y: =242
            ZIndex: =22

    frmEditImplementationModel As form:
        DataSource: ='Implementation Models'
        Height: =317
        Item: =glyImplementationModels.Selected
        NumberOfColumns: =1
        Visible: =If(varEditOpenImplementationModel,true,false)
        Width: =610
        X: =275
        Y: =233
        ZIndex: =25

        Platform_DataCard1 As typedDataCard.comboBoxEditCard:
            BorderStyle: =BorderStyle.Solid
            DataField: ="neu_PlatformID"
            Default: =ThisItem.Platform
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Implementation Models'],DataSourceInfo.DisplayName,"neu_PlatformID")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =false
            Update: =dcIMPlatform.Selected
            Width: =610
            X: =0
            Y: =0
            ZIndex: =1

            DataCardKey47 As label:
                AutoHeight: =true
                Height: =34
                Text: =Parent.DisplayName
                Width: =Parent.Width - 60
                Wrap: =false
                X: =30
                Y: =10
                ZIndex: =1

            dcIMPlatform As combobox:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                DefaultSelectedItems: =Parent.Default
                DisplayFields: =["neu_platformname"]
                DisplayMode: =Parent.DisplayMode
                Items: =Choices([@'Implementation Models'].neu_PlatformID)
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                SearchFields: =["neu_platformname"]
                SearchItems: =Search(Choices([@'Implementation Models'].neu_PlatformID),dcIMPlatform.SearchText,"neu_platformname")
                SelectMultiple: =false
                Tooltip: =Parent.DisplayName
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardKey47.Y + DataCardKey47.Height + 5
                ZIndex: =2

            ErrorMessage41 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =dcIMPlatform.Y + dcIMPlatform.Height
                ZIndex: =3

            StarVisible36 As label:
                Align: =Align.Center
                Height: =DataCardKey47.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey47.Y
                ZIndex: =4

        "'Status Reason_DataCard5' As typedDataCard.comboBoxOptionSetSingleEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="statuscode"
            Default: =ThisItem.'Status Reason'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Implementation Models'],DataSourceInfo.DisplayName,"statuscode")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            Required: =true
            Update: =dcIMStatusReason.Selected.Value
            Width: =610
            X: =0
            Y: =1
            ZIndex: =1

            DataCardKey49 As label:
                AutoHeight: =true
                Height: =34
                Text: =Parent.DisplayName
                Width: =Parent.Width - 60
                Wrap: =false
                X: =30
                Y: =10
                ZIndex: =1

            dcIMStatusReason As combobox:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                DefaultSelectedItems: =[Parent.Default]
                DisplayFields: =["Value"]
                DisplayMode: =Parent.DisplayMode
                IsSearchable: =false
                Items: =Choices('Status Reason (Implementation Models)')
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                SearchFields: =["Value"]
                SearchItems: =[]
                SelectMultiple: =false
                Tooltip: =Parent.DisplayName
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardKey49.Y + DataCardKey49.Height + 5
                ZIndex: =2

            ErrorMessage44 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =dcIMStatusReason.Y + dcIMStatusReason.Height
                ZIndex: =3

            StarVisible39 As label:
                Align: =Align.Center
                Height: =DataCardKey49.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey49.Y
                ZIndex: =4

        "'Implementation Model Name_DataCard1' As typedDataCard.textualEditCard":
            BorderStyle: =BorderStyle.Solid
            DataField: ="neu_implementationmodelname"
            Default: =ThisItem.'Implementation Model Name'
            DisplayMode: =Parent.DisplayMode
            DisplayName: =DataSourceInfo([@'Implementation Models'],DataSourceInfo.DisplayName,"neu_implementationmodelname")
            Fill: =RGBA(0, 0, 0, 0)
            Height: =50
            MaxLength: =DataSourceInfo([@'Implementation Models'], DataSourceInfo.MaxLength, "neu_implementationmodelname")
            Required: =true
            Update: =dcImplementationModelName.Text
            Width: =610
            X: =0
            Y: =2
            ZIndex: =26

            DataCardKey14 As label:
                AutoHeight: =true
                Height: =34
                Text: =Parent.DisplayName
                Width: =Parent.Width - 60
                Wrap: =false
                X: =30
                Y: =10
                ZIndex: =1

            dcImplementationModelName As text:
                BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                Default: =Parent.Default
                DelayOutput: =true
                DisplayMode: =Parent.DisplayMode
                MaxLength: =Parent.MaxLength
                PaddingLeft: =5
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Tooltip: =Parent.DisplayName
                Width: =Parent.Width - 60
                X: =30
                Y: =DataCardKey14.Y + DataCardKey14.Height + 5
                ZIndex: =2

            ErrorMessage16 As label:
                AutoHeight: =true
                Height: =10
                Live: =Live.Assertive
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Text: =Parent.Error
                Visible: =Parent.DisplayMode=DisplayMode.Edit
                Width: =Parent.Width - 60
                X: =30
                Y: =dcImplementationModelName.Y + dcImplementationModelName.Height
                ZIndex: =3

            StarVisible16 As label:
                Align: =Align.Center
                Height: =DataCardKey14.Height
                Text: ="*"
                Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                Width: =30
                Wrap: =false
                Y: =DataCardKey14.Y
                ZIndex: =4

